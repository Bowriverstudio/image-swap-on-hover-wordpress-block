{"version":3,"sources":["@wordpress/block-library/src/cover/edit.js"],"names":["ALLOWED_MEDIA_TYPES","INNER_BLOCKS_TEMPLATE","align","fontSize","placeholder","retrieveFastAverageColor","fastAverageColor","FastAverageColor","CoverHeightInput","value","instanceId","onChange","temporaryInput","setTemporaryInput","inputId","event","unprocessedValue","target","inputValue","parseInt","undefined","isNaN","COVER_MIN_HEIGHT","RESIZABLE_BOX_ENABLE_OPTION","top","right","bottom","left","topRight","bottomRight","bottomLeft","topLeft","ResizableCover","className","children","onResizeStart","onResize","onResizeStop","isResizing","setIsResizing","direction","elt","clientHeight","onCoverSelectMedia","setAttributes","media","url","id","mediaType","media_type","IMAGE_BACKGROUND_TYPE","VIDEO_BACKGROUND_TYPE","type","backgroundType","focalPoint","hasParallax","useCoverIsDark","dimRatio","overlayColor","elementRef","isDark","setIsDark","current","getColorAsync","color","CoverEdit","attributes","isSelected","noticeUI","setOverlayColor","toggleSelection","noticeOperations","minHeight","gradientClass","gradientValue","setGradient","onSelectMedia","toggleParallax","isDarkElement","temporaryMinHeight","setTemporaryMinHeight","removeAllNotices","createErrorNotice","style","backgroundColor","background","backgroundPosition","x","y","hasBackground","controls","newFocalPoint","newMinHeight","colorValue","onColorChange","onGradientChange","label","newDimRation","placeholderIcon","icon","title","instructions","message","classes","class","display","dispatch","withNotices","withInstanceId"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\nimport FastAverageColor from 'fast-average-color';\nimport tinycolor from 'tinycolor2';\n\n/**\n * WordPress dependencies\n */\nimport { useEffect, useRef, useState } from '@wordpress/element';\nimport {\n\tBaseControl,\n\tButton,\n\tFocalPointPicker,\n\tPanelBody,\n\tPanelRow,\n\tRangeControl,\n\tResizableBox,\n\tToggleControl,\n\twithNotices,\n} from '@wordpress/components';\nimport { compose, withInstanceId } from '@wordpress/compose';\nimport {\n\tBlockControls,\n\tBlockIcon,\n\tInnerBlocks,\n\tInspectorControls,\n\tMediaPlaceholder,\n\tMediaReplaceFlow,\n\twithColors,\n\tColorPalette,\n\t__experimentalUseGradient,\n\t__experimentalPanelColorGradientSettings as PanelColorGradientSettings,\n} from '@wordpress/block-editor';\nimport { __ } from '@wordpress/i18n';\nimport { withDispatch } from '@wordpress/data';\nimport { cover as icon } from '@wordpress/icons';\n\n/**\n * Internal dependencies\n */\nimport {\n\tIMAGE_BACKGROUND_TYPE,\n\tVIDEO_BACKGROUND_TYPE,\n\tCOVER_MIN_HEIGHT,\n\tbackgroundImageStyles,\n\tdimRatioToClass,\n} from './shared';\n\n/**\n * Module Constants\n */\nconst ALLOWED_MEDIA_TYPES = [ 'image', 'video' ];\nconst INNER_BLOCKS_TEMPLATE = [\n\t[\n\t\t'core/paragraph',\n\t\t{\n\t\t\talign: 'center',\n\t\t\tfontSize: 'large',\n\t\t\tplaceholder: __( 'Write title…' ),\n\t\t},\n\t],\n];\n\nfunction retrieveFastAverageColor() {\n\tif ( ! retrieveFastAverageColor.fastAverageColor ) {\n\t\tretrieveFastAverageColor.fastAverageColor = new FastAverageColor();\n\t}\n\treturn retrieveFastAverageColor.fastAverageColor;\n}\n\nconst CoverHeightInput = withInstanceId( function( {\n\tvalue = '',\n\tinstanceId,\n\tonChange,\n} ) {\n\tconst [ temporaryInput, setTemporaryInput ] = useState( null );\n\tconst inputId = `block-cover-height-input-${ instanceId }`;\n\treturn (\n\t\t<BaseControl label={ __( 'Minimum height in pixels' ) } id={ inputId }>\n\t\t\t<input\n\t\t\t\ttype=\"number\"\n\t\t\t\tid={ inputId }\n\t\t\t\tonChange={ ( event ) => {\n\t\t\t\t\tconst unprocessedValue = event.target.value;\n\t\t\t\t\tconst inputValue =\n\t\t\t\t\t\tunprocessedValue !== ''\n\t\t\t\t\t\t\t? parseInt( event.target.value, 10 )\n\t\t\t\t\t\t\t: undefined;\n\t\t\t\t\tif (\n\t\t\t\t\t\t( isNaN( inputValue ) ||\n\t\t\t\t\t\t\tinputValue < COVER_MIN_HEIGHT ) &&\n\t\t\t\t\t\tinputValue !== undefined\n\t\t\t\t\t) {\n\t\t\t\t\t\tsetTemporaryInput( event.target.value );\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tsetTemporaryInput( null );\n\t\t\t\t\tonChange( inputValue );\n\t\t\t\t} }\n\t\t\t\tonBlur={ () => {\n\t\t\t\t\tif ( temporaryInput !== null ) {\n\t\t\t\t\t\tsetTemporaryInput( null );\n\t\t\t\t\t}\n\t\t\t\t} }\n\t\t\t\tvalue={ temporaryInput !== null ? temporaryInput : value }\n\t\t\t\tmin={ COVER_MIN_HEIGHT }\n\t\t\t\tstep=\"1\"\n\t\t\t/>\n\t\t</BaseControl>\n\t);\n} );\n\nconst RESIZABLE_BOX_ENABLE_OPTION = {\n\ttop: false,\n\tright: false,\n\tbottom: true,\n\tleft: false,\n\ttopRight: false,\n\tbottomRight: false,\n\tbottomLeft: false,\n\ttopLeft: false,\n};\n\nfunction ResizableCover( {\n\tclassName,\n\tchildren,\n\tonResizeStart,\n\tonResize,\n\tonResizeStop,\n} ) {\n\tconst [ isResizing, setIsResizing ] = useState( false );\n\n\treturn (\n\t\t<ResizableBox\n\t\t\tclassName={ classnames( className, {\n\t\t\t\t'is-resizing': isResizing,\n\t\t\t} ) }\n\t\t\tenable={ RESIZABLE_BOX_ENABLE_OPTION }\n\t\t\tonResizeStart={ ( event, direction, elt ) => {\n\t\t\t\tonResizeStart( elt.clientHeight );\n\t\t\t\tonResize( elt.clientHeight );\n\t\t\t} }\n\t\t\tonResize={ ( event, direction, elt ) => {\n\t\t\t\tonResize( elt.clientHeight );\n\t\t\t\tif ( ! isResizing ) {\n\t\t\t\t\tsetIsResizing( true );\n\t\t\t\t}\n\t\t\t} }\n\t\t\tonResizeStop={ ( event, direction, elt ) => {\n\t\t\t\tonResizeStop( elt.clientHeight );\n\t\t\t\tsetIsResizing( false );\n\t\t\t} }\n\t\t\tminHeight={ COVER_MIN_HEIGHT }\n\t\t>\n\t\t\t{ children }\n\t\t</ResizableBox>\n\t);\n}\n\nfunction onCoverSelectMedia( setAttributes ) {\n\treturn ( media ) => {\n\t\tif ( ! media || ! media.url ) {\n\t\t\tsetAttributes( { url: undefined, id: undefined } );\n\t\t\treturn;\n\t\t}\n\t\tlet mediaType;\n\t\t// for media selections originated from a file upload.\n\t\tif ( media.media_type ) {\n\t\t\tif ( media.media_type === IMAGE_BACKGROUND_TYPE ) {\n\t\t\t\tmediaType = IMAGE_BACKGROUND_TYPE;\n\t\t\t} else {\n\t\t\t\t// only images and videos are accepted so if the media_type is not an image we can assume it is a video.\n\t\t\t\t// Videos contain the media type of 'file' in the object returned from the rest api.\n\t\t\t\tmediaType = VIDEO_BACKGROUND_TYPE;\n\t\t\t}\n\t\t} else {\n\t\t\t// for media selections originated from existing files in the media library.\n\t\t\tif (\n\t\t\t\tmedia.type !== IMAGE_BACKGROUND_TYPE &&\n\t\t\t\tmedia.type !== VIDEO_BACKGROUND_TYPE\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tmediaType = media.type;\n\t\t}\n\n\t\tsetAttributes( {\n\t\t\turl: media.url,\n\t\t\tid: media.id,\n\t\t\tbackgroundType: mediaType,\n\t\t\t...( mediaType === VIDEO_BACKGROUND_TYPE\n\t\t\t\t? { focalPoint: undefined, hasParallax: undefined }\n\t\t\t\t: {} ),\n\t\t} );\n\t};\n}\n\n/**\n * useCoverIsDark is a hook that returns a boolean variable specifying if the cover\n * background is dark or not.\n *\n * @param {?string} url          Url of the media background.\n * @param {?number} dimRatio     Transparency of the overlay color. If an image and\n *                               color are set, dimRatio is used to decide what is used\n *                               for background darkness checking purposes.\n * @param {?string} overlayColor String containing the overlay color value if one exists.\n * @param {?Object} elementRef   If a media background is set, elementRef should contain a reference to a\n *                               dom element that renders that media.\n *\n * @return {boolean} True if the cover background is considered \"dark\" and false otherwise.\n */\nfunction useCoverIsDark( url, dimRatio = 50, overlayColor, elementRef ) {\n\tconst [ isDark, setIsDark ] = useState( false );\n\tuseEffect( () => {\n\t\t// If opacity is lower than 50 the dominant color is the image or video color,\n\t\t// so use that color for the dark mode computation.\n\t\tif ( url && dimRatio <= 50 && elementRef.current ) {\n\t\t\tretrieveFastAverageColor().getColorAsync(\n\t\t\t\telementRef.current,\n\t\t\t\t( color ) => {\n\t\t\t\t\tsetIsDark( color.isDark );\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}, [ url, url && dimRatio <= 50 && elementRef.current, setIsDark ] );\n\tuseEffect( () => {\n\t\t// If opacity is greater than 50 the dominant color is the overlay color,\n\t\t// so use that color for the dark mode computation.\n\t\tif ( dimRatio > 50 || ! url ) {\n\t\t\tif ( ! overlayColor ) {\n\t\t\t\t// If no overlay color exists the overlay color is black (isDark )\n\t\t\t\tsetIsDark( true );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsetIsDark( tinycolor( overlayColor ).isDark() );\n\t\t}\n\t}, [ overlayColor, dimRatio > 50 || ! url, setIsDark ] );\n\tuseEffect( () => {\n\t\tif ( ! url && ! overlayColor ) {\n\t\t\t// Reset isDark\n\t\t\tsetIsDark( false );\n\t\t}\n\t}, [ ! url && ! overlayColor, setIsDark ] );\n\treturn isDark;\n}\n\nfunction CoverEdit( {\n\tattributes,\n\tsetAttributes,\n\tisSelected,\n\tclassName,\n\tnoticeUI,\n\toverlayColor,\n\tsetOverlayColor,\n\ttoggleSelection,\n\tnoticeOperations,\n} ) {\n\tconst {\n\t\tbackgroundType,\n\t\tdimRatio,\n\t\tfocalPoint,\n\t\thasParallax,\n\t\tminHeight,\n\t\turl,\n\t} = attributes;\n\tconst {\n\t\tgradientClass,\n\t\tgradientValue,\n\t\tsetGradient,\n\t} = __experimentalUseGradient();\n\tconst onSelectMedia = onCoverSelectMedia( setAttributes );\n\n\tconst toggleParallax = () => {\n\t\tsetAttributes( {\n\t\t\thasParallax: ! hasParallax,\n\t\t\t...( ! hasParallax ? { focalPoint: undefined } : {} ),\n\t\t} );\n\t};\n\n\tconst isDarkElement = useRef();\n\tconst isDark = useCoverIsDark(\n\t\turl,\n\t\tdimRatio,\n\t\toverlayColor.color,\n\t\tisDarkElement\n\t);\n\n\tconst [ temporaryMinHeight, setTemporaryMinHeight ] = useState( null );\n\n\tconst { removeAllNotices, createErrorNotice } = noticeOperations;\n\n\tconst style = {\n\t\t...( backgroundType === IMAGE_BACKGROUND_TYPE\n\t\t\t? backgroundImageStyles( url )\n\t\t\t: {} ),\n\t\tbackgroundColor: overlayColor.color,\n\t\tminHeight: temporaryMinHeight || minHeight,\n\t};\n\n\tif ( gradientValue && ! url ) {\n\t\tstyle.background = gradientValue;\n\t}\n\n\tif ( focalPoint ) {\n\t\tstyle.backgroundPosition = `${ focalPoint.x * 100 }% ${ focalPoint.y *\n\t\t\t100 }%`;\n\t}\n\n\tconst hasBackground = !! ( url || overlayColor.color || gradientValue );\n\n\tconst controls = (\n\t\t<>\n\t\t\t<BlockControls>\n\t\t\t\t{ hasBackground && (\n\t\t\t\t\t<MediaReplaceFlow\n\t\t\t\t\t\tmediaURL={ url }\n\t\t\t\t\t\tallowedTypes={ ALLOWED_MEDIA_TYPES }\n\t\t\t\t\t\taccept=\"image/*,video/*\"\n\t\t\t\t\t\tonSelect={ onSelectMedia }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t</BlockControls>\n\t\t\t<InspectorControls>\n\t\t\t\t{ !! url && (\n\t\t\t\t\t<PanelBody title={ __( 'Media settings' ) }>\n\t\t\t\t\t\t{ IMAGE_BACKGROUND_TYPE === backgroundType && (\n\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\tlabel={ __( 'Fixed Background' ) }\n\t\t\t\t\t\t\t\tchecked={ hasParallax }\n\t\t\t\t\t\t\t\tonChange={ toggleParallax }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t\t{ IMAGE_BACKGROUND_TYPE === backgroundType &&\n\t\t\t\t\t\t\t! hasParallax && (\n\t\t\t\t\t\t\t\t<FocalPointPicker\n\t\t\t\t\t\t\t\t\tlabel={ __( 'Focal Point Picker' ) }\n\t\t\t\t\t\t\t\t\turl={ url }\n\t\t\t\t\t\t\t\t\tvalue={ focalPoint }\n\t\t\t\t\t\t\t\t\tonChange={ ( newFocalPoint ) =>\n\t\t\t\t\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\t\t\t\t\tfocalPoint: newFocalPoint,\n\t\t\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t{ VIDEO_BACKGROUND_TYPE === backgroundType && (\n\t\t\t\t\t\t\t<video autoPlay muted loop src={ url } />\n\t\t\t\t\t\t) }\n\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tisSecondary\n\t\t\t\t\t\t\t\tisSmall\n\t\t\t\t\t\t\t\tclassName=\"block-library-cover__reset-button\"\n\t\t\t\t\t\t\t\tonClick={ () =>\n\t\t\t\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\t\t\t\turl: undefined,\n\t\t\t\t\t\t\t\t\t\tid: undefined,\n\t\t\t\t\t\t\t\t\t\tbackgroundType: undefined,\n\t\t\t\t\t\t\t\t\t\tdimRatio: undefined,\n\t\t\t\t\t\t\t\t\t\tfocalPoint: undefined,\n\t\t\t\t\t\t\t\t\t\thasParallax: undefined,\n\t\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{ __( 'Clear Media' ) }\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</PanelRow>\n\t\t\t\t\t</PanelBody>\n\t\t\t\t) }\n\t\t\t\t{ hasBackground && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<PanelBody title={ __( 'Dimensions' ) }>\n\t\t\t\t\t\t\t<CoverHeightInput\n\t\t\t\t\t\t\t\tvalue={ temporaryMinHeight || minHeight }\n\t\t\t\t\t\t\t\tonChange={ ( newMinHeight ) =>\n\t\t\t\t\t\t\t\t\tsetAttributes( { minHeight: newMinHeight } )\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</PanelBody>\n\t\t\t\t\t\t<PanelColorGradientSettings\n\t\t\t\t\t\t\ttitle={ __( 'Overlay' ) }\n\t\t\t\t\t\t\tinitialOpen={ true }\n\t\t\t\t\t\t\tsettings={ [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tcolorValue: overlayColor.color,\n\t\t\t\t\t\t\t\t\tgradientValue,\n\t\t\t\t\t\t\t\t\tonColorChange: setOverlayColor,\n\t\t\t\t\t\t\t\t\tonGradientChange: setGradient,\n\t\t\t\t\t\t\t\t\tlabel: __( 'Overlay' ),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t] }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ !! url && (\n\t\t\t\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t\t\t\tlabel={ __( 'Background Opacity' ) }\n\t\t\t\t\t\t\t\t\tvalue={ dimRatio }\n\t\t\t\t\t\t\t\t\tonChange={ ( newDimRation ) =>\n\t\t\t\t\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\t\t\t\t\tdimRatio: newDimRation,\n\t\t\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tmin={ 0 }\n\t\t\t\t\t\t\t\t\tmax={ 100 }\n\t\t\t\t\t\t\t\t\tstep={ 10 }\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</PanelColorGradientSettings>\n\t\t\t\t\t</>\n\t\t\t\t) }\n\t\t\t</InspectorControls>\n\t\t</>\n\t);\n\n\tif ( ! hasBackground ) {\n\t\tconst placeholderIcon = <BlockIcon icon={ icon } />;\n\t\tconst label = __( 'Cover' );\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{ controls }\n\t\t\t\t<MediaPlaceholder\n\t\t\t\t\ticon={ placeholderIcon }\n\t\t\t\t\tclassName={ className }\n\t\t\t\t\tlabels={ {\n\t\t\t\t\t\ttitle: label,\n\t\t\t\t\t\tinstructions: __(\n\t\t\t\t\t\t\t'Upload an image or video file, or pick one from your media library.'\n\t\t\t\t\t\t),\n\t\t\t\t\t} }\n\t\t\t\t\tonSelect={ onSelectMedia }\n\t\t\t\t\taccept=\"image/*,video/*\"\n\t\t\t\t\tallowedTypes={ ALLOWED_MEDIA_TYPES }\n\t\t\t\t\tnotices={ noticeUI }\n\t\t\t\t\tonError={ ( message ) => {\n\t\t\t\t\t\tremoveAllNotices();\n\t\t\t\t\t\tcreateErrorNotice( message );\n\t\t\t\t\t} }\n\t\t\t\t>\n\t\t\t\t\t<div className=\"wp-block-cover__placeholder-background-options\">\n\t\t\t\t\t\t<ColorPalette\n\t\t\t\t\t\t\tdisableCustomColors={ true }\n\t\t\t\t\t\t\tvalue={ overlayColor.color }\n\t\t\t\t\t\t\tonChange={ setOverlayColor }\n\t\t\t\t\t\t\tclearable={ false }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</MediaPlaceholder>\n\t\t\t</>\n\t\t);\n\t}\n\n\tconst classes = classnames( className, dimRatioToClass( dimRatio ), {\n\t\t'is-dark-theme': isDark,\n\t\t'has-background-dim': dimRatio !== 0,\n\t\t'has-parallax': hasParallax,\n\t\t[ overlayColor.class ]: overlayColor.class,\n\t\t'has-background-gradient': gradientValue,\n\t\t[ gradientClass ]: ! url && gradientClass,\n\t} );\n\n\treturn (\n\t\t<>\n\t\t\t{ controls }\n\t\t\t<ResizableCover\n\t\t\t\tclassName={ classnames(\n\t\t\t\t\t'block-library-cover__resize-container',\n\t\t\t\t\t{\n\t\t\t\t\t\t'is-selected': isSelected,\n\t\t\t\t\t}\n\t\t\t\t) }\n\t\t\t\tonResizeStart={ () => toggleSelection( false ) }\n\t\t\t\tonResize={ setTemporaryMinHeight }\n\t\t\t\tonResizeStop={ ( newMinHeight ) => {\n\t\t\t\t\ttoggleSelection( true );\n\t\t\t\t\tsetAttributes( { minHeight: newMinHeight } );\n\t\t\t\t\tsetTemporaryMinHeight( null );\n\t\t\t\t} }\n\t\t\t>\n\t\t\t\t<div data-url={ url } style={ style } className={ classes }>\n\t\t\t\t\t{ IMAGE_BACKGROUND_TYPE === backgroundType && (\n\t\t\t\t\t\t// Used only to programmatically check if the image is dark or not\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tref={ isDarkElement }\n\t\t\t\t\t\t\taria-hidden\n\t\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\t\tstyle={ {\n\t\t\t\t\t\t\t\tdisplay: 'none',\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\tsrc={ url }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t\t{ url && gradientValue && dimRatio !== 0 && (\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t\t\t\tclassName={ classnames(\n\t\t\t\t\t\t\t\t'wp-block-cover__gradient-background',\n\t\t\t\t\t\t\t\tgradientClass\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\tstyle={ { background: gradientValue } }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t\t{ VIDEO_BACKGROUND_TYPE === backgroundType && (\n\t\t\t\t\t\t<video\n\t\t\t\t\t\t\tref={ isDarkElement }\n\t\t\t\t\t\t\tclassName=\"wp-block-cover__video-background\"\n\t\t\t\t\t\t\tautoPlay\n\t\t\t\t\t\t\tmuted\n\t\t\t\t\t\t\tloop\n\t\t\t\t\t\t\tsrc={ url }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t\t<div className=\"wp-block-cover__inner-container\">\n\t\t\t\t\t\t<InnerBlocks template={ INNER_BLOCKS_TEMPLATE } />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</ResizableCover>\n\t\t</>\n\t);\n}\n\nexport default compose( [\n\twithDispatch( ( dispatch ) => {\n\t\tconst { toggleSelection } = dispatch( 'core/block-editor' );\n\n\t\treturn {\n\t\t\ttoggleSelection,\n\t\t};\n\t} ),\n\twithColors( { overlayColor: 'background-color' } ),\n\twithNotices,\n\twithInstanceId,\n] )( CoverEdit );\n"]}