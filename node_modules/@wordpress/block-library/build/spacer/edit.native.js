"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _element = require("@wordpress/element");

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _reactNative = require("react-native");

var _components = require("@wordpress/components");

var _compose = require("@wordpress/compose");

var _blockEditor = require("@wordpress/block-editor");

var _i18n = require("@wordpress/i18n");

var _editor = _interopRequireDefault(require("./editor.scss"));

/**
 * External dependencies
 */

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */
var minSpacerHeight = 20;
var maxSpacerHeight = 500;

var SpacerEdit = function SpacerEdit(_ref) {
  var isSelected = _ref.isSelected,
      attributes = _ref.attributes,
      setAttributes = _ref.setAttributes,
      getStylesFromColorScheme = _ref.getStylesFromColorScheme;
  var height = attributes.height;

  var _useState = (0, _element.useState)(height),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      sliderSpacerMaxHeight = _useState2[0],
      setSpacerMaxHeight = _useState2[1]; // Height defined on the web can be higher than
  // `maxSpacerHeight`, so there is a need to `setSpacerMaxHeight`
  // after the initial render.


  (0, _element.useEffect)(function () {
    setSpacerMaxHeight(height > maxSpacerHeight ? height * 2 : maxSpacerHeight);
  }, []);

  var changeAttribute = function changeAttribute(value) {
    setAttributes({
      height: value
    });
  };

  var defaultStyle = getStylesFromColorScheme(_editor.default.staticSpacer, _editor.default.staticDarkSpacer);
  return (0, _element.createElement)(_reactNative.View, {
    style: [defaultStyle, isSelected && _editor.default.selectedSpacer, {
      height: height
    }]
  }, (0, _element.createElement)(_blockEditor.InspectorControls, null, (0, _element.createElement)(_components.PanelBody, {
    title: (0, _i18n.__)('Spacer settings')
  }, (0, _element.createElement)(_components.RangeControl, {
    label: (0, _i18n.__)('Height in pixels'),
    minimumValue: minSpacerHeight,
    maximumValue: sliderSpacerMaxHeight,
    separatorType: 'none',
    value: height,
    onChange: changeAttribute,
    style: _editor.default.rangeCellContainer
  }))));
};

var _default = (0, _compose.withPreferredColorScheme)(SpacerEdit);

exports.default = _default;
//# sourceMappingURL=edit.native.js.map