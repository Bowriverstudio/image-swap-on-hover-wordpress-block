"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _element = require("@wordpress/element");

var _data = require("@wordpress/data");

var _compose = require("@wordpress/compose");

var _blockEditor = require("@wordpress/block-editor");

/**
 * WordPress dependencies
 */
function GroupEdit(_ref) {
  var hasInnerBlocks = _ref.hasInnerBlocks;
  var ref = (0, _element.useRef)();

  var _experimentalUseColo = (0, _blockEditor.__experimentalUseColors)([{
    name: 'textColor',
    property: 'color'
  }, {
    name: 'backgroundColor',
    className: 'has-background'
  }], {
    contrastCheckers: {
      backgroundColor: true,
      textColor: true
    },
    colorDetector: {
      targetRef: ref
    }
  }),
      TextColor = _experimentalUseColo.TextColor,
      BackgroundColor = _experimentalUseColo.BackgroundColor,
      InspectorControlsColorPanel = _experimentalUseColo.InspectorControlsColorPanel;

  return (0, _element.createElement)(_element.Fragment, null, InspectorControlsColorPanel, (0, _element.createElement)(BackgroundColor, null, (0, _element.createElement)(TextColor, null, (0, _element.createElement)("div", {
    className: "wp-block-group",
    ref: ref
  }, (0, _element.createElement)("div", {
    className: "wp-block-group__inner-container"
  }, (0, _element.createElement)(_blockEditor.InnerBlocks, {
    renderAppender: !hasInnerBlocks && _blockEditor.InnerBlocks.ButtonBlockAppender
  }))))));
}

var _default = (0, _compose.compose)([(0, _data.withSelect)(function (select, _ref2) {
  var clientId = _ref2.clientId;

  var _select = select('core/block-editor'),
      getBlock = _select.getBlock;

  var block = getBlock(clientId);
  return {
    hasInnerBlocks: !!(block && block.innerBlocks.length)
  };
})])(GroupEdit);

exports.default = _default;
//# sourceMappingURL=edit.js.map