{"version":3,"sources":["@wordpress/block-library/src/image/edit.js"],"names":["pickRelevantMediaFiles","image","imageProps","url","isTemporaryImage","id","isExternalImage","ImageEdit","arguments","updateAlt","bind","updateAlignment","onFocusCaption","onImageClick","onSelectImage","onSelectURL","updateImage","onSetHref","onSetTitle","getFilename","onUploadError","onImageError","state","captionFocused","props","attributes","mediaUpload","noticeOperations","file","filesList","onFileChange","allowedTypes","ALLOWED_MEDIA_TYPES","onError","message","createErrorNotice","prevProps","prevID","prevURL","isSelected","setState","removeAllNotices","media","setAttributes","undefined","alt","title","caption","linkDestination","mediaAttributes","additionalAttributes","width","height","sizeSlug","DEFAULT_SIZE_SLUG","LINK_DESTINATION_MEDIA","href","LINK_DESTINATION_ATTACHMENT","link","newURL","embedBlock","onReplace","value","newAlt","nextAlign","extraUpdatedAttributes","indexOf","align","path","split","imageSizes","slug","name","label","isLargeViewport","className","maxWidth","noticeUI","isRTL","onResizeStart","onResizeStop","rel","linkClass","linkTarget","isExternal","controls","source_url","src","labels","instructions","mediaPreview","mediaPlaceholder","icon","classes","isResizable","imageSizeOptions","getImageSizeOptions","getInspectorControls","imageWidth","imageHeight","sizes","imageWidthWithinContainer","imageHeightWithinContainer","filename","defaultedAlt","img","currentWidth","currentHeight","ratio","minWidth","MIN_SIZE","minHeight","maxWidthBuffer","showRightHandle","showLeftHandle","top","right","bottom","left","event","direction","elt","delta","parseInt","RichText","isEmpty","Component","dispatch","toggleSelection","select","getMedia","getSettings","withNotices"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\nimport { get, filter, map, last, omit, pick } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { getBlobByURL, isBlobURL, revokeBlobURL } from '@wordpress/blob';\nimport {\n\tExternalLink,\n\tPanelBody,\n\tResizableBox,\n\tSpinner,\n\tTextareaControl,\n\tTextControl,\n\tToolbarGroup,\n\twithNotices,\n} from '@wordpress/components';\nimport { compose } from '@wordpress/compose';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport {\n\tBlockAlignmentToolbar,\n\tBlockControls,\n\tBlockIcon,\n\tInspectorControls,\n\tInspectorAdvancedControls,\n\tMediaPlaceholder,\n\tMediaReplaceFlow,\n\tRichText,\n\t__experimentalImageSizeControl as ImageSizeControl,\n\t__experimentalImageURLInputUI as ImageURLInputUI,\n} from '@wordpress/block-editor';\nimport { Component } from '@wordpress/element';\nimport { __, sprintf } from '@wordpress/i18n';\nimport { getPath } from '@wordpress/url';\nimport { withViewportMatch } from '@wordpress/viewport';\nimport { image as icon } from '@wordpress/icons';\n\n/**\n * Internal dependencies\n */\nimport { createUpgradedEmbedBlock } from '../embed/util';\nimport ImageSize from './image-size';\n/**\n * Module constants\n */\nimport {\n\tMIN_SIZE,\n\tLINK_DESTINATION_MEDIA,\n\tLINK_DESTINATION_ATTACHMENT,\n\tALLOWED_MEDIA_TYPES,\n\tDEFAULT_SIZE_SLUG,\n} from './constants';\n\nexport const pickRelevantMediaFiles = ( image ) => {\n\tconst imageProps = pick( image, [ 'alt', 'id', 'link', 'caption' ] );\n\timageProps.url =\n\t\tget( image, [ 'sizes', 'large', 'url' ] ) ||\n\t\tget( image, [ 'media_details', 'sizes', 'large', 'source_url' ] ) ||\n\t\timage.url;\n\treturn imageProps;\n};\n\n/**\n * Is the URL a temporary blob URL? A blob URL is one that is used temporarily\n * while the image is being uploaded and will not have an id yet allocated.\n *\n * @param {number=} id The id of the image.\n * @param {string=} url The url of the image.\n *\n * @return {boolean} Is the URL a Blob URL\n */\nconst isTemporaryImage = ( id, url ) => ! id && isBlobURL( url );\n\n/**\n * Is the url for the image hosted externally. An externally hosted image has no id\n * and is not a blob url.\n *\n * @param {number=} id  The id of the image.\n * @param {string=} url The url of the image.\n *\n * @return {boolean} Is the url an externally hosted url?\n */\nconst isExternalImage = ( id, url ) => url && ! id && ! isBlobURL( url );\n\nexport class ImageEdit extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\t\tthis.updateAlt = this.updateAlt.bind( this );\n\t\tthis.updateAlignment = this.updateAlignment.bind( this );\n\t\tthis.onFocusCaption = this.onFocusCaption.bind( this );\n\t\tthis.onImageClick = this.onImageClick.bind( this );\n\t\tthis.onSelectImage = this.onSelectImage.bind( this );\n\t\tthis.onSelectURL = this.onSelectURL.bind( this );\n\t\tthis.updateImage = this.updateImage.bind( this );\n\t\tthis.onSetHref = this.onSetHref.bind( this );\n\t\tthis.onSetTitle = this.onSetTitle.bind( this );\n\t\tthis.getFilename = this.getFilename.bind( this );\n\t\tthis.onUploadError = this.onUploadError.bind( this );\n\t\tthis.onImageError = this.onImageError.bind( this );\n\n\t\tthis.state = {\n\t\t\tcaptionFocused: false,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { attributes, mediaUpload, noticeOperations } = this.props;\n\t\tconst { id, url = '' } = attributes;\n\n\t\tif ( isTemporaryImage( id, url ) ) {\n\t\t\tconst file = getBlobByURL( url );\n\n\t\t\tif ( file ) {\n\t\t\t\tmediaUpload( {\n\t\t\t\t\tfilesList: [ file ],\n\t\t\t\t\tonFileChange: ( [ image ] ) => {\n\t\t\t\t\t\tthis.onSelectImage( image );\n\t\t\t\t\t},\n\t\t\t\t\tallowedTypes: ALLOWED_MEDIA_TYPES,\n\t\t\t\t\tonError: ( message ) => {\n\t\t\t\t\t\tnoticeOperations.createErrorNotice( message );\n\t\t\t\t\t},\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t}\n\n\tcomponentDidUpdate( prevProps ) {\n\t\tconst { id: prevID, url: prevURL = '' } = prevProps.attributes;\n\t\tconst { id, url = '' } = this.props.attributes;\n\n\t\tif (\n\t\t\tisTemporaryImage( prevID, prevURL ) &&\n\t\t\t! isTemporaryImage( id, url )\n\t\t) {\n\t\t\trevokeBlobURL( url );\n\t\t}\n\n\t\tif (\n\t\t\t! this.props.isSelected &&\n\t\t\tprevProps.isSelected &&\n\t\t\tthis.state.captionFocused\n\t\t) {\n\t\t\tthis.setState( {\n\t\t\t\tcaptionFocused: false,\n\t\t\t} );\n\t\t}\n\t}\n\n\tonUploadError( message ) {\n\t\tconst { noticeOperations } = this.props;\n\t\tnoticeOperations.removeAllNotices();\n\t\tnoticeOperations.createErrorNotice( message );\n\t}\n\n\tonSelectImage( media ) {\n\t\tif ( ! media || ! media.url ) {\n\t\t\tthis.props.setAttributes( {\n\t\t\t\turl: undefined,\n\t\t\t\talt: undefined,\n\t\t\t\tid: undefined,\n\t\t\t\ttitle: undefined,\n\t\t\t\tcaption: undefined,\n\t\t\t} );\n\t\t\treturn;\n\t\t}\n\n\t\tconst {\n\t\t\tid,\n\t\t\turl,\n\t\t\talt,\n\t\t\tcaption,\n\t\t\tlinkDestination,\n\t\t} = this.props.attributes;\n\n\t\tlet mediaAttributes = pickRelevantMediaFiles( media );\n\n\t\t// If the current image is temporary but an alt or caption text was meanwhile written by the user,\n\t\t// make sure the text is not overwritten.\n\t\tif ( isTemporaryImage( id, url ) ) {\n\t\t\tif ( alt ) {\n\t\t\t\tmediaAttributes = omit( mediaAttributes, [ 'alt' ] );\n\t\t\t}\n\t\t\tif ( caption ) {\n\t\t\t\tmediaAttributes = omit( mediaAttributes, [ 'caption' ] );\n\t\t\t}\n\t\t}\n\n\t\tlet additionalAttributes;\n\t\t// Reset the dimension attributes if changing to a different image.\n\t\tif ( ! media.id || media.id !== id ) {\n\t\t\tadditionalAttributes = {\n\t\t\t\twidth: undefined,\n\t\t\t\theight: undefined,\n\t\t\t\tsizeSlug: DEFAULT_SIZE_SLUG,\n\t\t\t};\n\t\t} else {\n\t\t\t// Keep the same url when selecting the same file, so \"Image Size\" option is not changed.\n\t\t\tadditionalAttributes = { url };\n\t\t}\n\n\t\t// Check if the image is linked to it's media.\n\t\tif ( linkDestination === LINK_DESTINATION_MEDIA ) {\n\t\t\t// Update the media link.\n\t\t\tmediaAttributes.href = media.url;\n\t\t}\n\n\t\t// Check if the image is linked to the attachment page.\n\t\tif ( linkDestination === LINK_DESTINATION_ATTACHMENT ) {\n\t\t\t// Update the media link.\n\t\t\tmediaAttributes.href = media.link;\n\t\t}\n\n\t\tthis.props.setAttributes( {\n\t\t\t...mediaAttributes,\n\t\t\t...additionalAttributes,\n\t\t} );\n\t}\n\n\tonSelectURL( newURL ) {\n\t\tconst { url } = this.props.attributes;\n\n\t\tif ( newURL !== url ) {\n\t\t\tthis.props.setAttributes( {\n\t\t\t\turl: newURL,\n\t\t\t\tid: undefined,\n\t\t\t\tsizeSlug: DEFAULT_SIZE_SLUG,\n\t\t\t} );\n\t\t}\n\t}\n\n\tonImageError( url ) {\n\t\t// Check if there's an embed block that handles this URL.\n\t\tconst embedBlock = createUpgradedEmbedBlock( { attributes: { url } } );\n\t\tif ( undefined !== embedBlock ) {\n\t\t\tthis.props.onReplace( embedBlock );\n\t\t}\n\t}\n\n\tonSetHref( props ) {\n\t\tthis.props.setAttributes( props );\n\t}\n\n\tonSetTitle( value ) {\n\t\t// This is the HTML title attribute, separate from the media object title\n\t\tthis.props.setAttributes( { title: value } );\n\t}\n\n\tonFocusCaption() {\n\t\tif ( ! this.state.captionFocused ) {\n\t\t\tthis.setState( {\n\t\t\t\tcaptionFocused: true,\n\t\t\t} );\n\t\t}\n\t}\n\n\tonImageClick() {\n\t\tif ( this.state.captionFocused ) {\n\t\t\tthis.setState( {\n\t\t\t\tcaptionFocused: false,\n\t\t\t} );\n\t\t}\n\t}\n\n\tupdateAlt( newAlt ) {\n\t\tthis.props.setAttributes( { alt: newAlt } );\n\t}\n\n\tupdateAlignment( nextAlign ) {\n\t\tconst extraUpdatedAttributes =\n\t\t\t[ 'wide', 'full' ].indexOf( nextAlign ) !== -1\n\t\t\t\t? { width: undefined, height: undefined }\n\t\t\t\t: {};\n\t\tthis.props.setAttributes( {\n\t\t\t...extraUpdatedAttributes,\n\t\t\talign: nextAlign,\n\t\t} );\n\t}\n\n\tupdateImage( sizeSlug ) {\n\t\tconst { image } = this.props;\n\n\t\tconst url = get( image, [\n\t\t\t'media_details',\n\t\t\t'sizes',\n\t\t\tsizeSlug,\n\t\t\t'source_url',\n\t\t] );\n\t\tif ( ! url ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tthis.props.setAttributes( {\n\t\t\turl,\n\t\t\twidth: undefined,\n\t\t\theight: undefined,\n\t\t\tsizeSlug,\n\t\t} );\n\t}\n\n\tgetFilename( url ) {\n\t\tconst path = getPath( url );\n\t\tif ( path ) {\n\t\t\treturn last( path.split( '/' ) );\n\t\t}\n\t}\n\n\tgetImageSizeOptions() {\n\t\tconst { imageSizes, image } = this.props;\n\t\treturn map(\n\t\t\tfilter( imageSizes, ( { slug } ) =>\n\t\t\t\tget( image, [ 'media_details', 'sizes', slug, 'source_url' ] )\n\t\t\t),\n\t\t\t( { name, slug } ) => ( { value: slug, label: name } )\n\t\t);\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tattributes,\n\t\t\tsetAttributes,\n\t\t\tisLargeViewport,\n\t\t\tisSelected,\n\t\t\tclassName,\n\t\t\tmaxWidth,\n\t\t\tnoticeUI,\n\t\t\tisRTL,\n\t\t\tonResizeStart,\n\t\t\tonResizeStop,\n\t\t} = this.props;\n\t\tconst {\n\t\t\turl,\n\t\t\talt,\n\t\t\tcaption,\n\t\t\talign,\n\t\t\tid,\n\t\t\thref,\n\t\t\trel,\n\t\t\tlinkClass,\n\t\t\tlinkDestination,\n\t\t\ttitle,\n\t\t\twidth,\n\t\t\theight,\n\t\t\tlinkTarget,\n\t\t\tsizeSlug,\n\t\t} = attributes;\n\n\t\tconst isExternal = isExternalImage( id, url );\n\t\tconst controls = (\n\t\t\t<BlockControls>\n\t\t\t\t<BlockAlignmentToolbar\n\t\t\t\t\tvalue={ align }\n\t\t\t\t\tonChange={ this.updateAlignment }\n\t\t\t\t/>\n\t\t\t\t{ url && (\n\t\t\t\t\t<MediaReplaceFlow\n\t\t\t\t\t\tmediaURL={ url }\n\t\t\t\t\t\tallowedTypes={ ALLOWED_MEDIA_TYPES }\n\t\t\t\t\t\taccept=\"image/*\"\n\t\t\t\t\t\tonSelect={ this.onSelectImage }\n\t\t\t\t\t\tonSelectURL={ this.onSelectURL }\n\t\t\t\t\t\tonError={ this.onUploadError }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t\t{ url && (\n\t\t\t\t\t<ToolbarGroup>\n\t\t\t\t\t\t<ImageURLInputUI\n\t\t\t\t\t\t\turl={ href || '' }\n\t\t\t\t\t\t\tonChangeUrl={ this.onSetHref }\n\t\t\t\t\t\t\tlinkDestination={ linkDestination }\n\t\t\t\t\t\t\tmediaUrl={\n\t\t\t\t\t\t\t\tthis.props.image && this.props.image.source_url\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmediaLink={\n\t\t\t\t\t\t\t\tthis.props.image && this.props.image.link\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlinkTarget={ linkTarget }\n\t\t\t\t\t\t\tlinkClass={ linkClass }\n\t\t\t\t\t\t\trel={ rel }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ToolbarGroup>\n\t\t\t\t) }\n\t\t\t</BlockControls>\n\t\t);\n\t\tconst src = isExternal ? url : undefined;\n\t\tconst labels = {\n\t\t\ttitle: ! url ? __( 'Image' ) : __( 'Edit image' ),\n\t\t\tinstructions: __(\n\t\t\t\t'Upload an image file, pick one from your media library, or add one with a URL.'\n\t\t\t),\n\t\t};\n\t\tconst mediaPreview = !! url && (\n\t\t\t<img\n\t\t\t\talt={ __( 'Edit image' ) }\n\t\t\t\ttitle={ __( 'Edit image' ) }\n\t\t\t\tclassName={ 'edit-image-preview' }\n\t\t\t\tsrc={ url }\n\t\t\t/>\n\t\t);\n\t\tconst mediaPlaceholder = (\n\t\t\t<MediaPlaceholder\n\t\t\t\ticon={ <BlockIcon icon={ icon } /> }\n\t\t\t\tclassName={ className }\n\t\t\t\tlabels={ labels }\n\t\t\t\tonSelect={ this.onSelectImage }\n\t\t\t\tonSelectURL={ this.onSelectURL }\n\t\t\t\tnotices={ noticeUI }\n\t\t\t\tonError={ this.onUploadError }\n\t\t\t\taccept=\"image/*\"\n\t\t\t\tallowedTypes={ ALLOWED_MEDIA_TYPES }\n\t\t\t\tvalue={ { id, src } }\n\t\t\t\tmediaPreview={ mediaPreview }\n\t\t\t\tdisableMediaButtons={ url }\n\t\t\t/>\n\t\t);\n\t\tif ( ! url ) {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t{ controls }\n\t\t\t\t\t{ mediaPlaceholder }\n\t\t\t\t</>\n\t\t\t);\n\t\t}\n\n\t\tconst classes = classnames( className, {\n\t\t\t'is-transient': isBlobURL( url ),\n\t\t\t'is-resized': !! width || !! height,\n\t\t\t'is-focused': isSelected,\n\t\t\t[ `size-${ sizeSlug }` ]: sizeSlug,\n\t\t} );\n\n\t\tconst isResizable =\n\t\t\t[ 'wide', 'full' ].indexOf( align ) === -1 && isLargeViewport;\n\n\t\tconst imageSizeOptions = this.getImageSizeOptions();\n\n\t\tconst getInspectorControls = ( imageWidth, imageHeight ) => (\n\t\t\t<>\n\t\t\t\t<InspectorControls>\n\t\t\t\t\t<PanelBody title={ __( 'Image settings' ) }>\n\t\t\t\t\t\t<TextareaControl\n\t\t\t\t\t\t\tlabel={ __( 'Alt Text (Alternative Text)' ) }\n\t\t\t\t\t\t\tvalue={ alt }\n\t\t\t\t\t\t\tonChange={ this.updateAlt }\n\t\t\t\t\t\t\thelp={\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<ExternalLink href=\"https://www.w3.org/WAI/tutorials/images/decision-tree\">\n\t\t\t\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t\t\t\t'Describe the purpose of the image'\n\t\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t</ExternalLink>\n\t\t\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t\t\t'Leave empty if the image is purely decorative.'\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ImageSizeControl\n\t\t\t\t\t\t\tonChangeImage={ this.updateImage }\n\t\t\t\t\t\t\tonChange={ ( value ) => setAttributes( value ) }\n\t\t\t\t\t\t\tslug={ sizeSlug }\n\t\t\t\t\t\t\twidth={ width }\n\t\t\t\t\t\t\theight={ height }\n\t\t\t\t\t\t\timageSizeOptions={ imageSizeOptions }\n\t\t\t\t\t\t\tisResizable={ isResizable }\n\t\t\t\t\t\t\timageWidth={ imageWidth }\n\t\t\t\t\t\t\timageHeight={ imageHeight }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</PanelBody>\n\t\t\t\t</InspectorControls>\n\t\t\t\t<InspectorAdvancedControls>\n\t\t\t\t\t<TextControl\n\t\t\t\t\t\tlabel={ __( 'Title Attribute' ) }\n\t\t\t\t\t\tvalue={ title || '' }\n\t\t\t\t\t\tonChange={ this.onSetTitle }\n\t\t\t\t\t\thelp={\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t\t'Describe the role of this image on the page.'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t<ExternalLink href=\"https://www.w3.org/TR/html52/dom.html#the-title-attribute\">\n\t\t\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t\t\t'(Note: many devices and browsers do not display this text.)'\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t</ExternalLink>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</InspectorAdvancedControls>\n\t\t\t</>\n\t\t);\n\n\t\t// Disable reason: Each block can be selected by clicking on it\n\t\t/* eslint-disable jsx-a11y/click-events-have-key-events */\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{ controls }\n\t\t\t\t<figure className={ classes }>\n\t\t\t\t\t<ImageSize src={ url } dirtynessTrigger={ align }>\n\t\t\t\t\t\t{ ( sizes ) => {\n\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\timageWidthWithinContainer,\n\t\t\t\t\t\t\t\timageHeightWithinContainer,\n\t\t\t\t\t\t\t\timageWidth,\n\t\t\t\t\t\t\t\timageHeight,\n\t\t\t\t\t\t\t} = sizes;\n\n\t\t\t\t\t\t\tconst filename = this.getFilename( url );\n\t\t\t\t\t\t\tlet defaultedAlt;\n\t\t\t\t\t\t\tif ( alt ) {\n\t\t\t\t\t\t\t\tdefaultedAlt = alt;\n\t\t\t\t\t\t\t} else if ( filename ) {\n\t\t\t\t\t\t\t\tdefaultedAlt = sprintf(\n\t\t\t\t\t\t\t\t\t__(\n\t\t\t\t\t\t\t\t\t\t'This image has an empty alt attribute; its file name is %s'\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tfilename\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tdefaultedAlt = __(\n\t\t\t\t\t\t\t\t\t'This image has an empty alt attribute'\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst img = (\n\t\t\t\t\t\t\t\t// Disable reason: Image itself is not meant to be interactive, but\n\t\t\t\t\t\t\t\t// should direct focus to block.\n\t\t\t\t\t\t\t\t/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\tsrc={ url }\n\t\t\t\t\t\t\t\t\t\talt={ defaultedAlt }\n\t\t\t\t\t\t\t\t\t\tonClick={ this.onImageClick }\n\t\t\t\t\t\t\t\t\t\tonError={ () =>\n\t\t\t\t\t\t\t\t\t\t\tthis.onImageError( url )\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t{ isBlobURL( url ) && <Spinner /> }\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t/* eslint-enable jsx-a11y/no-noninteractive-element-interactions */\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t! isResizable ||\n\t\t\t\t\t\t\t\t! imageWidthWithinContainer\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t{ getInspectorControls(\n\t\t\t\t\t\t\t\t\t\t\timageWidth,\n\t\t\t\t\t\t\t\t\t\t\timageHeight\n\t\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t\t<div style={ { width, height } }>\n\t\t\t\t\t\t\t\t\t\t\t{ img }\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst currentWidth =\n\t\t\t\t\t\t\t\twidth || imageWidthWithinContainer;\n\t\t\t\t\t\t\tconst currentHeight =\n\t\t\t\t\t\t\t\theight || imageHeightWithinContainer;\n\n\t\t\t\t\t\t\tconst ratio = imageWidth / imageHeight;\n\t\t\t\t\t\t\tconst minWidth =\n\t\t\t\t\t\t\t\timageWidth < imageHeight\n\t\t\t\t\t\t\t\t\t? MIN_SIZE\n\t\t\t\t\t\t\t\t\t: MIN_SIZE * ratio;\n\t\t\t\t\t\t\tconst minHeight =\n\t\t\t\t\t\t\t\timageHeight < imageWidth\n\t\t\t\t\t\t\t\t\t? MIN_SIZE\n\t\t\t\t\t\t\t\t\t: MIN_SIZE / ratio;\n\n\t\t\t\t\t\t\t// With the current implementation of ResizableBox, an image needs an explicit pixel value for the max-width.\n\t\t\t\t\t\t\t// In absence of being able to set the content-width, this max-width is currently dictated by the vanilla editor style.\n\t\t\t\t\t\t\t// The following variable adds a buffer to this vanilla style, so 3rd party themes have some wiggleroom.\n\t\t\t\t\t\t\t// This does, in most cases, allow you to scale the image beyond the width of the main column, though not infinitely.\n\t\t\t\t\t\t\t// @todo It would be good to revisit this once a content-width variable becomes available.\n\t\t\t\t\t\t\tconst maxWidthBuffer = maxWidth * 2.5;\n\n\t\t\t\t\t\t\tlet showRightHandle = false;\n\t\t\t\t\t\t\tlet showLeftHandle = false;\n\n\t\t\t\t\t\t\t/* eslint-disable no-lonely-if */\n\t\t\t\t\t\t\t// See https://github.com/WordPress/gutenberg/issues/7584.\n\t\t\t\t\t\t\tif ( align === 'center' ) {\n\t\t\t\t\t\t\t\t// When the image is centered, show both handles.\n\t\t\t\t\t\t\t\tshowRightHandle = true;\n\t\t\t\t\t\t\t\tshowLeftHandle = true;\n\t\t\t\t\t\t\t} else if ( isRTL ) {\n\t\t\t\t\t\t\t\t// In RTL mode the image is on the right by default.\n\t\t\t\t\t\t\t\t// Show the right handle and hide the left handle only when it is aligned left.\n\t\t\t\t\t\t\t\t// Otherwise always show the left handle.\n\t\t\t\t\t\t\t\tif ( align === 'left' ) {\n\t\t\t\t\t\t\t\t\tshowRightHandle = true;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tshowLeftHandle = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// Show the left handle and hide the right handle only when the image is aligned right.\n\t\t\t\t\t\t\t\t// Otherwise always show the right handle.\n\t\t\t\t\t\t\t\tif ( align === 'right' ) {\n\t\t\t\t\t\t\t\t\tshowLeftHandle = true;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tshowRightHandle = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/* eslint-enable no-lonely-if */\n\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t{ getInspectorControls(\n\t\t\t\t\t\t\t\t\t\timageWidth,\n\t\t\t\t\t\t\t\t\t\timageHeight\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t<ResizableBox\n\t\t\t\t\t\t\t\t\t\tsize={ {\n\t\t\t\t\t\t\t\t\t\t\twidth,\n\t\t\t\t\t\t\t\t\t\t\theight,\n\t\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t\t\tminWidth={ minWidth }\n\t\t\t\t\t\t\t\t\t\tmaxWidth={ maxWidthBuffer }\n\t\t\t\t\t\t\t\t\t\tminHeight={ minHeight }\n\t\t\t\t\t\t\t\t\t\tmaxHeight={ maxWidthBuffer / ratio }\n\t\t\t\t\t\t\t\t\t\tlockAspectRatio\n\t\t\t\t\t\t\t\t\t\tenable={ {\n\t\t\t\t\t\t\t\t\t\t\ttop: false,\n\t\t\t\t\t\t\t\t\t\t\tright: showRightHandle,\n\t\t\t\t\t\t\t\t\t\t\tbottom: true,\n\t\t\t\t\t\t\t\t\t\t\tleft: showLeftHandle,\n\t\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t\t\tonResizeStart={ onResizeStart }\n\t\t\t\t\t\t\t\t\t\tonResizeStop={ (\n\t\t\t\t\t\t\t\t\t\t\tevent,\n\t\t\t\t\t\t\t\t\t\t\tdirection,\n\t\t\t\t\t\t\t\t\t\t\telt,\n\t\t\t\t\t\t\t\t\t\t\tdelta\n\t\t\t\t\t\t\t\t\t\t) => {\n\t\t\t\t\t\t\t\t\t\t\tonResizeStop();\n\t\t\t\t\t\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\t\t\t\t\t\twidth: parseInt(\n\t\t\t\t\t\t\t\t\t\t\t\t\tcurrentWidth + delta.width,\n\t\t\t\t\t\t\t\t\t\t\t\t\t10\n\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t\theight: parseInt(\n\t\t\t\t\t\t\t\t\t\t\t\t\tcurrentHeight +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdelta.height,\n\t\t\t\t\t\t\t\t\t\t\t\t\t10\n\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{ img }\n\t\t\t\t\t\t\t\t\t</ResizableBox>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} }\n\t\t\t\t\t</ImageSize>\n\t\t\t\t\t{ ( ! RichText.isEmpty( caption ) || isSelected ) && (\n\t\t\t\t\t\t<RichText\n\t\t\t\t\t\t\ttagName=\"figcaption\"\n\t\t\t\t\t\t\tplaceholder={ __( 'Write caption…' ) }\n\t\t\t\t\t\t\tvalue={ caption }\n\t\t\t\t\t\t\tunstableOnFocus={ this.onFocusCaption }\n\t\t\t\t\t\t\tonChange={ ( value ) =>\n\t\t\t\t\t\t\t\tsetAttributes( { caption: value } )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tisSelected={ this.state.captionFocused }\n\t\t\t\t\t\t\tinlineToolbar\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t</figure>\n\t\t\t\t{ mediaPlaceholder }\n\t\t\t</>\n\t\t);\n\t\t/* eslint-enable jsx-a11y/click-events-have-key-events */\n\t}\n}\n\nexport default compose( [\n\twithDispatch( ( dispatch ) => {\n\t\tconst { toggleSelection } = dispatch( 'core/block-editor' );\n\n\t\treturn {\n\t\t\tonResizeStart: () => toggleSelection( false ),\n\t\t\tonResizeStop: () => toggleSelection( true ),\n\t\t};\n\t} ),\n\twithSelect( ( select, props ) => {\n\t\tconst { getMedia } = select( 'core' );\n\t\tconst { getSettings } = select( 'core/block-editor' );\n\t\tconst {\n\t\t\tattributes: { id },\n\t\t\tisSelected,\n\t\t} = props;\n\t\tconst { mediaUpload, imageSizes, isRTL, maxWidth } = getSettings();\n\n\t\treturn {\n\t\t\timage: id && isSelected ? getMedia( id ) : null,\n\t\t\tmaxWidth,\n\t\t\tisRTL,\n\t\t\timageSizes,\n\t\t\tmediaUpload,\n\t\t};\n\t} ),\n\twithViewportMatch( { isLargeViewport: 'medium' } ),\n\twithNotices,\n] )( ImageEdit );\n"]}