{"version":3,"sources":["@wordpress/block-library/src/heading/edit.js"],"names":["HeadingEdit","attributes","setAttributes","mergeBlocks","onReplace","className","ref","name","property","contrastCheckers","backgroundColor","textColor","colorDetector","targetRef","TextColor","InspectorControlsColorPanel","align","content","level","placeholder","tagName","newLevel","nextAlign","value"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * Internal dependencies\n */\nimport HeadingToolbar from './heading-toolbar';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { PanelBody } from '@wordpress/components';\nimport { createBlock } from '@wordpress/blocks';\nimport {\n\tAlignmentToolbar,\n\tBlockControls,\n\tInspectorControls,\n\tRichText,\n\t__experimentalUseColors,\n} from '@wordpress/block-editor';\nimport { useRef } from '@wordpress/element';\n\nfunction HeadingEdit( {\n\tattributes,\n\tsetAttributes,\n\tmergeBlocks,\n\tonReplace,\n\tclassName,\n} ) {\n\tconst ref = useRef();\n\tconst { TextColor, InspectorControlsColorPanel } = __experimentalUseColors(\n\t\t[ { name: 'textColor', property: 'color' } ],\n\t\t{\n\t\t\tcontrastCheckers: { backgroundColor: true, textColor: true },\n\t\t\tcolorDetector: { targetRef: ref },\n\t\t},\n\t\t[]\n\t);\n\n\tconst { align, content, level, placeholder } = attributes;\n\tconst tagName = 'h' + level;\n\n\treturn (\n\t\t<>\n\t\t\t<BlockControls>\n\t\t\t\t<HeadingToolbar\n\t\t\t\t\tminLevel={ 2 }\n\t\t\t\t\tmaxLevel={ 5 }\n\t\t\t\t\tselectedLevel={ level }\n\t\t\t\t\tonChange={ ( newLevel ) =>\n\t\t\t\t\t\tsetAttributes( { level: newLevel } )\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<AlignmentToolbar\n\t\t\t\t\tvalue={ align }\n\t\t\t\t\tonChange={ ( nextAlign ) => {\n\t\t\t\t\t\tsetAttributes( { align: nextAlign } );\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t</BlockControls>\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody title={ __( 'Heading settings' ) }>\n\t\t\t\t\t<p>{ __( 'Level' ) }</p>\n\t\t\t\t\t<HeadingToolbar\n\t\t\t\t\t\tisCollapsed={ false }\n\t\t\t\t\t\tminLevel={ 1 }\n\t\t\t\t\t\tmaxLevel={ 7 }\n\t\t\t\t\t\tselectedLevel={ level }\n\t\t\t\t\t\tonChange={ ( newLevel ) =>\n\t\t\t\t\t\t\tsetAttributes( { level: newLevel } )\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\t\t\t{ InspectorControlsColorPanel }\n\t\t\t<TextColor>\n\t\t\t\t<RichText\n\t\t\t\t\tref={ ref }\n\t\t\t\t\tidentifier=\"content\"\n\t\t\t\t\ttagName={ tagName }\n\t\t\t\t\tvalue={ content }\n\t\t\t\t\tonChange={ ( value ) =>\n\t\t\t\t\t\tsetAttributes( { content: value } )\n\t\t\t\t\t}\n\t\t\t\t\tonMerge={ mergeBlocks }\n\t\t\t\t\tonSplit={ ( value ) => {\n\t\t\t\t\t\tif ( ! value ) {\n\t\t\t\t\t\t\treturn createBlock( 'core/paragraph' );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn createBlock( 'core/heading', {\n\t\t\t\t\t\t\t...attributes,\n\t\t\t\t\t\t\tcontent: value,\n\t\t\t\t\t\t} );\n\t\t\t\t\t} }\n\t\t\t\t\tonReplace={ onReplace }\n\t\t\t\t\tonRemove={ () => onReplace( [] ) }\n\t\t\t\t\tclassName={ classnames( className, {\n\t\t\t\t\t\t[ `has-text-align-${ align }` ]: align,\n\t\t\t\t\t} ) }\n\t\t\t\t\tplaceholder={ placeholder || __( 'Write headingâ€¦' ) }\n\t\t\t\t/>\n\t\t\t</TextColor>\n\t\t</>\n\t);\n}\n\nexport default HeadingEdit;\n"]}