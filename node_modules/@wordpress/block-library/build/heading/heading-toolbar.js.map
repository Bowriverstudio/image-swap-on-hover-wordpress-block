{"version":3,"sources":["@wordpress/block-library/src/heading/heading-toolbar.js"],"names":["HeadingToolbar","targetLevel","selectedLevel","onChange","isActive","icon","title","onClick","props","isCollapsed","minLevel","maxLevel","map","index","createLevelControl","Component"],"mappings":";;;;;;;;;AASA;;;;;;;;;;;;AANA;;AAKA;;AAEA;;AAKA;;AAfA;;;;AAKA;;;;AAOA;;;IAKMA,c;;;;;;;;;;;;uCACeC,W,EAAaC,a,EAAeC,Q,EAAW;AAC1D,UAAMC,QAAQ,GAAGH,WAAW,KAAKC,aAAjC;AACA,aAAO;AACNG,QAAAA,IAAI,EACH,4BAAC,yBAAD;AACC,UAAA,KAAK,EAAGJ,WADT;AAEC,UAAA,SAAS,EAAGG;AAFb,UAFK;AAON;AACAE,QAAAA,KAAK,EAAE,mBAAS,cAAI,YAAJ,CAAT,EAA6BL,WAA7B,CARD;AASNG,QAAAA,QAAQ,EAARA,QATM;AAUNG,QAAAA,OAAO,EAAE;AAAA,iBAAMJ,QAAQ,CAAEF,WAAF,CAAd;AAAA;AAVH,OAAP;AAYA;;;6BAEQ;AAAA;;AAAA,wBAOJ,KAAKO,KAPD;AAAA,8CAEPC,WAFO;AAAA,UAEPA,WAFO,sCAEO,IAFP;AAAA,UAGPC,QAHO,eAGPA,QAHO;AAAA,UAIPC,QAJO,eAIPA,QAJO;AAAA,UAKPT,aALO,eAKPA,aALO;AAAA,UAMPC,QANO,eAMPA,QANO;AASR,aACC,4BAAC,wBAAD;AACC,QAAA,WAAW,EAAGM,WADf;AAEC,QAAA,IAAI,EAAG,4BAAC,yBAAD;AAAkB,UAAA,KAAK,EAAGP;AAA1B,UAFR;AAGC,QAAA,QAAQ,EAAG,mBAAOQ,QAAP,EAAiBC,QAAjB,EAA4BC,GAA5B,CAAiC,UAAEC,KAAF;AAAA,iBAC3C,KAAI,CAACC,kBAAL,CAAyBD,KAAzB,EAAgCX,aAAhC,EAA+CC,QAA/C,CAD2C;AAAA,SAAjC;AAHZ,QADD;AASA;;;EAnC2BY,kB;;eAsCdf,c","sourcesContent":["/**\n * External dependencies\n */\nimport { range } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __, sprintf } from '@wordpress/i18n';\nimport { Component } from '@wordpress/element';\nimport { ToolbarGroup } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport HeadingLevelIcon from './heading-level-icon';\n\nclass HeadingToolbar extends Component {\n\tcreateLevelControl( targetLevel, selectedLevel, onChange ) {\n\t\tconst isActive = targetLevel === selectedLevel;\n\t\treturn {\n\t\t\ticon: (\n\t\t\t\t<HeadingLevelIcon\n\t\t\t\t\tlevel={ targetLevel }\n\t\t\t\t\tisPressed={ isActive }\n\t\t\t\t/>\n\t\t\t),\n\t\t\t// translators: %s: heading level e.g: \"1\", \"2\", \"3\"\n\t\t\ttitle: sprintf( __( 'Heading %d' ), targetLevel ),\n\t\t\tisActive,\n\t\t\tonClick: () => onChange( targetLevel ),\n\t\t};\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tisCollapsed = true,\n\t\t\tminLevel,\n\t\t\tmaxLevel,\n\t\t\tselectedLevel,\n\t\t\tonChange,\n\t\t} = this.props;\n\n\t\treturn (\n\t\t\t<ToolbarGroup\n\t\t\t\tisCollapsed={ isCollapsed }\n\t\t\t\ticon={ <HeadingLevelIcon level={ selectedLevel } /> }\n\t\t\t\tcontrols={ range( minLevel, maxLevel ).map( ( index ) =>\n\t\t\t\t\tthis.createLevelControl( index, selectedLevel, onChange )\n\t\t\t\t) }\n\t\t\t/>\n\t\t);\n\t}\n}\n\nexport default HeadingToolbar;\n"]}