import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/**
 * WordPress dependencies
 */
import { __ } from '@wordpress/i18n';
/**
 * Internal dependencies
 */

import edit from './edit';
import socialList from './social-list';
var commonAttributes = {
  category: 'widgets',
  parent: ['core/social-links'],
  supports: {
    reusable: false,
    html: false
  },
  edit: edit
}; // Create individual blocks out of each site in social-list.js

export var sites = Object.keys(socialList).map(function (site) {
  var siteParams = socialList[site];
  return {
    name: 'core/social-link-' + site,
    settings: _objectSpread({
      title: siteParams.name,
      icon: siteParams.icon,
      description: __('Link to ' + siteParams.name)
    }, commonAttributes, {
      attributes: {
        url: {
          type: 'string'
        },
        site: {
          type: 'string',
          default: site
        },
        label: {
          type: 'string'
        }
      }
    })
  };
});
//# sourceMappingURL=index.js.map