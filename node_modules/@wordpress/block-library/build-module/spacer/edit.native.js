import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import { createElement } from "@wordpress/element";

/**
 * External dependencies
 */
import { View } from 'react-native';
/**
 * WordPress dependencies
 */

import { RangeControl, PanelBody } from '@wordpress/components';
import { withPreferredColorScheme } from '@wordpress/compose';
import { useState, useEffect } from '@wordpress/element';
import { InspectorControls } from '@wordpress/block-editor';
import { __ } from '@wordpress/i18n';
/**
 * Internal dependencies
 */

import styles from './editor.scss';
var minSpacerHeight = 20;
var maxSpacerHeight = 500;

var SpacerEdit = function SpacerEdit(_ref) {
  var isSelected = _ref.isSelected,
      attributes = _ref.attributes,
      setAttributes = _ref.setAttributes,
      getStylesFromColorScheme = _ref.getStylesFromColorScheme;
  var height = attributes.height;

  var _useState = useState(height),
      _useState2 = _slicedToArray(_useState, 2),
      sliderSpacerMaxHeight = _useState2[0],
      setSpacerMaxHeight = _useState2[1]; // Height defined on the web can be higher than
  // `maxSpacerHeight`, so there is a need to `setSpacerMaxHeight`
  // after the initial render.


  useEffect(function () {
    setSpacerMaxHeight(height > maxSpacerHeight ? height * 2 : maxSpacerHeight);
  }, []);

  var changeAttribute = function changeAttribute(value) {
    setAttributes({
      height: value
    });
  };

  var defaultStyle = getStylesFromColorScheme(styles.staticSpacer, styles.staticDarkSpacer);
  return createElement(View, {
    style: [defaultStyle, isSelected && styles.selectedSpacer, {
      height: height
    }]
  }, createElement(InspectorControls, null, createElement(PanelBody, {
    title: __('Spacer settings')
  }, createElement(RangeControl, {
    label: __('Height in pixels'),
    minimumValue: minSpacerHeight,
    maximumValue: sliderSpacerMaxHeight,
    separatorType: 'none',
    value: height,
    onChange: changeAttribute,
    style: styles.rangeCellContainer
  }))));
};

export default withPreferredColorScheme(SpacerEdit);
//# sourceMappingURL=edit.native.js.map