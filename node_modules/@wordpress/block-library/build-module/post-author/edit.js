import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import { createElement } from "@wordpress/element";

/**
 * WordPress dependencies
 */
import { useEntityProp, useEntityId } from '@wordpress/core-data';
import { useSelect } from '@wordpress/data';
import { sprintf, __ } from '@wordpress/i18n';

function PostAuthorDisplay() {
  var _useEntityProp = useEntityProp('postType', 'post', 'author'),
      _useEntityProp2 = _slicedToArray(_useEntityProp, 1),
      authorId = _useEntityProp2[0];

  var author = useSelect(function (select) {
    return select('core').getEntityRecord('root', 'user', authorId);
  }, [authorId]);
  return author ? createElement("address", null, sprintf(__('By %s'), author.name)) : null;
}

export default function PostAuthorEdit() {
  if (!useEntityId('postType', 'post')) {
    return 'Post Author Placeholder';
  }

  return createElement(PostAuthorDisplay, null);
}
//# sourceMappingURL=edit.js.map