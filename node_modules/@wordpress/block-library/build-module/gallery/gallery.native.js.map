{"version":3,"sources":["@wordpress/block-library/src/gallery/gallery.native.js"],"names":["View","isEmpty","mediaUploadSync","GalleryImage","defaultColumnsNumber","styles","Tiles","__","sprintf","BlockCaption","useState","useEffect","TILE_SPACING","MAX_DISPLAYED_COLUMNS","MAX_DISPLAYED_COLUMNS_NARROW","Gallery","props","isCaptionSelected","setIsCaptionSelected","clientId","selectedImage","mediaPlaceholder","onBlur","onMoveBackward","onMoveForward","onRemoveImage","onSelectImage","onSetImageAttributes","onFocusGalleryCaption","attributes","isSelected","isNarrow","onFocus","columns","imageCrop","images","displayedColumns","Math","min","selectImage","index","focusGalleryCaption","galleryTilesContainerSelected","undefined","map","img","ariaLabel","length","id","url","alt","parseInt","attrs","caption"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { View } from 'react-native';\nimport { isEmpty } from 'lodash';\n\n/**\n * Internal dependencies\n */\nimport { mediaUploadSync } from 'react-native-gutenberg-bridge';\nimport GalleryImage from './gallery-image';\nimport { defaultColumnsNumber } from './shared';\nimport styles from './gallery-styles.scss';\nimport Tiles from './tiles';\n\n/**\n * WordPress dependencies\n */\nimport { __, sprintf } from '@wordpress/i18n';\nimport { BlockCaption } from '@wordpress/block-editor';\nimport { useState, useEffect } from '@wordpress/element';\n\nconst TILE_SPACING = 15;\n\n// we must limit displayed columns since readable content max-width is 580px\nconst MAX_DISPLAYED_COLUMNS = 4;\nconst MAX_DISPLAYED_COLUMNS_NARROW = 2;\n\nexport const Gallery = ( props ) => {\n\tconst [ isCaptionSelected, setIsCaptionSelected ] = useState( false );\n\tuseEffect( mediaUploadSync, [] );\n\n\tconst {\n\t\tclientId,\n\t\tselectedImage,\n\t\tmediaPlaceholder,\n\t\tonBlur,\n\t\tonMoveBackward,\n\t\tonMoveForward,\n\t\tonRemoveImage,\n\t\tonSelectImage,\n\t\tonSetImageAttributes,\n\t\tonFocusGalleryCaption,\n\t\tattributes,\n\t\tisSelected,\n\t\tisNarrow,\n\t\tonFocus,\n\t} = props;\n\n\tconst {\n\t\tcolumns = defaultColumnsNumber( attributes ),\n\t\timageCrop,\n\t\timages,\n\t} = attributes;\n\n\t// limit displayed columns when isNarrow is true (i.e. when viewport width is\n\t// less than \"small\", where small = 600)\n\tconst displayedColumns = isNarrow\n\t\t? Math.min( columns, MAX_DISPLAYED_COLUMNS_NARROW )\n\t\t: Math.min( columns, MAX_DISPLAYED_COLUMNS );\n\n\tconst selectImage = ( index ) => {\n\t\treturn () => {\n\t\t\tif ( isCaptionSelected ) {\n\t\t\t\tsetIsCaptionSelected( false );\n\t\t\t}\n\t\t\t// we need to fully invoke the curried function here\n\t\t\tonSelectImage( index )();\n\t\t};\n\t};\n\n\tconst focusGalleryCaption = () => {\n\t\tif ( ! isCaptionSelected ) {\n\t\t\tsetIsCaptionSelected( true );\n\t\t}\n\t\tonFocusGalleryCaption();\n\t};\n\n\treturn (\n\t\t<View>\n\t\t\t<Tiles\n\t\t\t\tcolumns={ displayedColumns }\n\t\t\t\tspacing={ TILE_SPACING }\n\t\t\t\tstyle={\n\t\t\t\t\tisSelected\n\t\t\t\t\t\t? styles.galleryTilesContainerSelected\n\t\t\t\t\t\t: undefined\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t{ images.map( ( img, index ) => {\n\t\t\t\t\t/* translators: %1$d is the order number of the image, %2$d is the total number of images. */\n\t\t\t\t\tconst ariaLabel = sprintf(\n\t\t\t\t\t\t__( 'image %1$d of %2$d in gallery' ),\n\t\t\t\t\t\tindex + 1,\n\t\t\t\t\t\timages.length\n\t\t\t\t\t);\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<GalleryImage\n\t\t\t\t\t\t\tkey={ img.id || img.url }\n\t\t\t\t\t\t\turl={ img.url }\n\t\t\t\t\t\t\talt={ img.alt }\n\t\t\t\t\t\t\tid={ parseInt( img.id, 10 ) } // make id an integer explicitly\n\t\t\t\t\t\t\tisCropped={ imageCrop }\n\t\t\t\t\t\t\tisFirstItem={ index === 0 }\n\t\t\t\t\t\t\tisLastItem={ index + 1 === images.length }\n\t\t\t\t\t\t\tisSelected={ isSelected && selectedImage === index }\n\t\t\t\t\t\t\tisBlockSelected={ isSelected }\n\t\t\t\t\t\t\tonMoveBackward={ onMoveBackward( index ) }\n\t\t\t\t\t\t\tonMoveForward={ onMoveForward( index ) }\n\t\t\t\t\t\t\tonRemove={ onRemoveImage( index ) }\n\t\t\t\t\t\t\tonSelect={ selectImage( index ) }\n\t\t\t\t\t\t\tonSelectBlock={ onFocus }\n\t\t\t\t\t\t\tsetAttributes={ ( attrs ) =>\n\t\t\t\t\t\t\t\tonSetImageAttributes( index, attrs )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcaption={ img.caption }\n\t\t\t\t\t\t\taria-label={ ariaLabel }\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t} ) }\n\t\t\t</Tiles>\n\t\t\t{ mediaPlaceholder }\n\t\t\t<BlockCaption\n\t\t\t\tclientId={ clientId }\n\t\t\t\tisSelected={ isCaptionSelected }\n\t\t\t\taccessible={ true }\n\t\t\t\taccessibilityLabelCreator={ ( caption ) =>\n\t\t\t\t\tisEmpty( caption )\n\t\t\t\t\t\t? /* translators: accessibility text. Empty gallery caption. */\n\t\t\t\t\t\t  'Gallery caption. Empty'\n\t\t\t\t\t\t: sprintf(\n\t\t\t\t\t\t\t\t/* translators: accessibility text. %s: gallery caption. */\n\t\t\t\t\t\t\t\t__( 'Gallery caption. %s' ),\n\t\t\t\t\t\t\t\tcaption\n\t\t\t\t\t\t  )\n\t\t\t\t}\n\t\t\t\tonFocus={ focusGalleryCaption }\n\t\t\t\tonBlur={ onBlur } // always assign onBlur as props\n\t\t\t/>\n\t\t</View>\n\t);\n};\n\nexport default Gallery;\n"]}