{"version":3,"sources":["@wordpress/block-library/src/image/edit.js"],"names":["classnames","get","filter","map","last","omit","pick","getBlobByURL","isBlobURL","revokeBlobURL","ExternalLink","PanelBody","ResizableBox","Spinner","TextareaControl","TextControl","ToolbarGroup","withNotices","compose","withSelect","withDispatch","BlockAlignmentToolbar","BlockControls","BlockIcon","InspectorControls","InspectorAdvancedControls","MediaPlaceholder","MediaReplaceFlow","RichText","__experimentalImageSizeControl","ImageSizeControl","__experimentalImageURLInputUI","ImageURLInputUI","Component","__","sprintf","getPath","withViewportMatch","image","icon","createUpgradedEmbedBlock","ImageSize","MIN_SIZE","LINK_DESTINATION_MEDIA","LINK_DESTINATION_ATTACHMENT","ALLOWED_MEDIA_TYPES","DEFAULT_SIZE_SLUG","pickRelevantMediaFiles","imageProps","url","isTemporaryImage","id","isExternalImage","ImageEdit","arguments","updateAlt","bind","updateAlignment","onFocusCaption","onImageClick","onSelectImage","onSelectURL","updateImage","onSetHref","onSetTitle","getFilename","onUploadError","onImageError","state","captionFocused","props","attributes","mediaUpload","noticeOperations","file","filesList","onFileChange","allowedTypes","onError","message","createErrorNotice","prevProps","prevID","prevURL","isSelected","setState","removeAllNotices","media","setAttributes","undefined","alt","title","caption","linkDestination","mediaAttributes","additionalAttributes","width","height","sizeSlug","href","link","newURL","embedBlock","onReplace","value","newAlt","nextAlign","extraUpdatedAttributes","indexOf","align","path","split","imageSizes","slug","name","label","isLargeViewport","className","maxWidth","noticeUI","isRTL","onResizeStart","onResizeStop","rel","linkClass","linkTarget","isExternal","controls","source_url","src","labels","instructions","mediaPreview","mediaPlaceholder","classes","isResizable","imageSizeOptions","getImageSizeOptions","getInspectorControls","imageWidth","imageHeight","sizes","imageWidthWithinContainer","imageHeightWithinContainer","filename","defaultedAlt","img","currentWidth","currentHeight","ratio","minWidth","minHeight","maxWidthBuffer","showRightHandle","showLeftHandle","top","right","bottom","left","event","direction","elt","delta","parseInt","isEmpty","dispatch","toggleSelection","select","getMedia","getSettings"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\nimport { get, filter, map, last, omit, pick } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { getBlobByURL, isBlobURL, revokeBlobURL } from '@wordpress/blob';\nimport {\n\tExternalLink,\n\tPanelBody,\n\tResizableBox,\n\tSpinner,\n\tTextareaControl,\n\tTextControl,\n\tToolbarGroup,\n\twithNotices,\n} from '@wordpress/components';\nimport { compose } from '@wordpress/compose';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport {\n\tBlockAlignmentToolbar,\n\tBlockControls,\n\tBlockIcon,\n\tInspectorControls,\n\tInspectorAdvancedControls,\n\tMediaPlaceholder,\n\tMediaReplaceFlow,\n\tRichText,\n\t__experimentalImageSizeControl as ImageSizeControl,\n\t__experimentalImageURLInputUI as ImageURLInputUI,\n} from '@wordpress/block-editor';\nimport { Component } from '@wordpress/element';\nimport { __, sprintf } from '@wordpress/i18n';\nimport { getPath } from '@wordpress/url';\nimport { withViewportMatch } from '@wordpress/viewport';\nimport { image as icon } from '@wordpress/icons';\n\n/**\n * Internal dependencies\n */\nimport { createUpgradedEmbedBlock } from '../embed/util';\nimport ImageSize from './image-size';\n/**\n * Module constants\n */\nimport {\n\tMIN_SIZE,\n\tLINK_DESTINATION_MEDIA,\n\tLINK_DESTINATION_ATTACHMENT,\n\tALLOWED_MEDIA_TYPES,\n\tDEFAULT_SIZE_SLUG,\n} from './constants';\n\nexport const pickRelevantMediaFiles = ( image ) => {\n\tconst imageProps = pick( image, [ 'alt', 'id', 'link', 'caption' ] );\n\timageProps.url =\n\t\tget( image, [ 'sizes', 'large', 'url' ] ) ||\n\t\tget( image, [ 'media_details', 'sizes', 'large', 'source_url' ] ) ||\n\t\timage.url;\n\treturn imageProps;\n};\n\n/**\n * Is the URL a temporary blob URL? A blob URL is one that is used temporarily\n * while the image is being uploaded and will not have an id yet allocated.\n *\n * @param {number=} id The id of the image.\n * @param {string=} url The url of the image.\n *\n * @return {boolean} Is the URL a Blob URL\n */\nconst isTemporaryImage = ( id, url ) => ! id && isBlobURL( url );\n\n/**\n * Is the url for the image hosted externally. An externally hosted image has no id\n * and is not a blob url.\n *\n * @param {number=} id  The id of the image.\n * @param {string=} url The url of the image.\n *\n * @return {boolean} Is the url an externally hosted url?\n */\nconst isExternalImage = ( id, url ) => url && ! id && ! isBlobURL( url );\n\nexport class ImageEdit extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\t\tthis.updateAlt = this.updateAlt.bind( this );\n\t\tthis.updateAlignment = this.updateAlignment.bind( this );\n\t\tthis.onFocusCaption = this.onFocusCaption.bind( this );\n\t\tthis.onImageClick = this.onImageClick.bind( this );\n\t\tthis.onSelectImage = this.onSelectImage.bind( this );\n\t\tthis.onSelectURL = this.onSelectURL.bind( this );\n\t\tthis.updateImage = this.updateImage.bind( this );\n\t\tthis.onSetHref = this.onSetHref.bind( this );\n\t\tthis.onSetTitle = this.onSetTitle.bind( this );\n\t\tthis.getFilename = this.getFilename.bind( this );\n\t\tthis.onUploadError = this.onUploadError.bind( this );\n\t\tthis.onImageError = this.onImageError.bind( this );\n\n\t\tthis.state = {\n\t\t\tcaptionFocused: false,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { attributes, mediaUpload, noticeOperations } = this.props;\n\t\tconst { id, url = '' } = attributes;\n\n\t\tif ( isTemporaryImage( id, url ) ) {\n\t\t\tconst file = getBlobByURL( url );\n\n\t\t\tif ( file ) {\n\t\t\t\tmediaUpload( {\n\t\t\t\t\tfilesList: [ file ],\n\t\t\t\t\tonFileChange: ( [ image ] ) => {\n\t\t\t\t\t\tthis.onSelectImage( image );\n\t\t\t\t\t},\n\t\t\t\t\tallowedTypes: ALLOWED_MEDIA_TYPES,\n\t\t\t\t\tonError: ( message ) => {\n\t\t\t\t\t\tnoticeOperations.createErrorNotice( message );\n\t\t\t\t\t},\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t}\n\n\tcomponentDidUpdate( prevProps ) {\n\t\tconst { id: prevID, url: prevURL = '' } = prevProps.attributes;\n\t\tconst { id, url = '' } = this.props.attributes;\n\n\t\tif (\n\t\t\tisTemporaryImage( prevID, prevURL ) &&\n\t\t\t! isTemporaryImage( id, url )\n\t\t) {\n\t\t\trevokeBlobURL( url );\n\t\t}\n\n\t\tif (\n\t\t\t! this.props.isSelected &&\n\t\t\tprevProps.isSelected &&\n\t\t\tthis.state.captionFocused\n\t\t) {\n\t\t\tthis.setState( {\n\t\t\t\tcaptionFocused: false,\n\t\t\t} );\n\t\t}\n\t}\n\n\tonUploadError( message ) {\n\t\tconst { noticeOperations } = this.props;\n\t\tnoticeOperations.removeAllNotices();\n\t\tnoticeOperations.createErrorNotice( message );\n\t}\n\n\tonSelectImage( media ) {\n\t\tif ( ! media || ! media.url ) {\n\t\t\tthis.props.setAttributes( {\n\t\t\t\turl: undefined,\n\t\t\t\talt: undefined,\n\t\t\t\tid: undefined,\n\t\t\t\ttitle: undefined,\n\t\t\t\tcaption: undefined,\n\t\t\t} );\n\t\t\treturn;\n\t\t}\n\n\t\tconst {\n\t\t\tid,\n\t\t\turl,\n\t\t\talt,\n\t\t\tcaption,\n\t\t\tlinkDestination,\n\t\t} = this.props.attributes;\n\n\t\tlet mediaAttributes = pickRelevantMediaFiles( media );\n\n\t\t// If the current image is temporary but an alt or caption text was meanwhile written by the user,\n\t\t// make sure the text is not overwritten.\n\t\tif ( isTemporaryImage( id, url ) ) {\n\t\t\tif ( alt ) {\n\t\t\t\tmediaAttributes = omit( mediaAttributes, [ 'alt' ] );\n\t\t\t}\n\t\t\tif ( caption ) {\n\t\t\t\tmediaAttributes = omit( mediaAttributes, [ 'caption' ] );\n\t\t\t}\n\t\t}\n\n\t\tlet additionalAttributes;\n\t\t// Reset the dimension attributes if changing to a different image.\n\t\tif ( ! media.id || media.id !== id ) {\n\t\t\tadditionalAttributes = {\n\t\t\t\twidth: undefined,\n\t\t\t\theight: undefined,\n\t\t\t\tsizeSlug: DEFAULT_SIZE_SLUG,\n\t\t\t};\n\t\t} else {\n\t\t\t// Keep the same url when selecting the same file, so \"Image Size\" option is not changed.\n\t\t\tadditionalAttributes = { url };\n\t\t}\n\n\t\t// Check if the image is linked to it's media.\n\t\tif ( linkDestination === LINK_DESTINATION_MEDIA ) {\n\t\t\t// Update the media link.\n\t\t\tmediaAttributes.href = media.url;\n\t\t}\n\n\t\t// Check if the image is linked to the attachment page.\n\t\tif ( linkDestination === LINK_DESTINATION_ATTACHMENT ) {\n\t\t\t// Update the media link.\n\t\t\tmediaAttributes.href = media.link;\n\t\t}\n\n\t\tthis.props.setAttributes( {\n\t\t\t...mediaAttributes,\n\t\t\t...additionalAttributes,\n\t\t} );\n\t}\n\n\tonSelectURL( newURL ) {\n\t\tconst { url } = this.props.attributes;\n\n\t\tif ( newURL !== url ) {\n\t\t\tthis.props.setAttributes( {\n\t\t\t\turl: newURL,\n\t\t\t\tid: undefined,\n\t\t\t\tsizeSlug: DEFAULT_SIZE_SLUG,\n\t\t\t} );\n\t\t}\n\t}\n\n\tonImageError( url ) {\n\t\t// Check if there's an embed block that handles this URL.\n\t\tconst embedBlock = createUpgradedEmbedBlock( { attributes: { url } } );\n\t\tif ( undefined !== embedBlock ) {\n\t\t\tthis.props.onReplace( embedBlock );\n\t\t}\n\t}\n\n\tonSetHref( props ) {\n\t\tthis.props.setAttributes( props );\n\t}\n\n\tonSetTitle( value ) {\n\t\t// This is the HTML title attribute, separate from the media object title\n\t\tthis.props.setAttributes( { title: value } );\n\t}\n\n\tonFocusCaption() {\n\t\tif ( ! this.state.captionFocused ) {\n\t\t\tthis.setState( {\n\t\t\t\tcaptionFocused: true,\n\t\t\t} );\n\t\t}\n\t}\n\n\tonImageClick() {\n\t\tif ( this.state.captionFocused ) {\n\t\t\tthis.setState( {\n\t\t\t\tcaptionFocused: false,\n\t\t\t} );\n\t\t}\n\t}\n\n\tupdateAlt( newAlt ) {\n\t\tthis.props.setAttributes( { alt: newAlt } );\n\t}\n\n\tupdateAlignment( nextAlign ) {\n\t\tconst extraUpdatedAttributes =\n\t\t\t[ 'wide', 'full' ].indexOf( nextAlign ) !== -1\n\t\t\t\t? { width: undefined, height: undefined }\n\t\t\t\t: {};\n\t\tthis.props.setAttributes( {\n\t\t\t...extraUpdatedAttributes,\n\t\t\talign: nextAlign,\n\t\t} );\n\t}\n\n\tupdateImage( sizeSlug ) {\n\t\tconst { image } = this.props;\n\n\t\tconst url = get( image, [\n\t\t\t'media_details',\n\t\t\t'sizes',\n\t\t\tsizeSlug,\n\t\t\t'source_url',\n\t\t] );\n\t\tif ( ! url ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tthis.props.setAttributes( {\n\t\t\turl,\n\t\t\twidth: undefined,\n\t\t\theight: undefined,\n\t\t\tsizeSlug,\n\t\t} );\n\t}\n\n\tgetFilename( url ) {\n\t\tconst path = getPath( url );\n\t\tif ( path ) {\n\t\t\treturn last( path.split( '/' ) );\n\t\t}\n\t}\n\n\tgetImageSizeOptions() {\n\t\tconst { imageSizes, image } = this.props;\n\t\treturn map(\n\t\t\tfilter( imageSizes, ( { slug } ) =>\n\t\t\t\tget( image, [ 'media_details', 'sizes', slug, 'source_url' ] )\n\t\t\t),\n\t\t\t( { name, slug } ) => ( { value: slug, label: name } )\n\t\t);\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tattributes,\n\t\t\tsetAttributes,\n\t\t\tisLargeViewport,\n\t\t\tisSelected,\n\t\t\tclassName,\n\t\t\tmaxWidth,\n\t\t\tnoticeUI,\n\t\t\tisRTL,\n\t\t\tonResizeStart,\n\t\t\tonResizeStop,\n\t\t} = this.props;\n\t\tconst {\n\t\t\turl,\n\t\t\talt,\n\t\t\tcaption,\n\t\t\talign,\n\t\t\tid,\n\t\t\thref,\n\t\t\trel,\n\t\t\tlinkClass,\n\t\t\tlinkDestination,\n\t\t\ttitle,\n\t\t\twidth,\n\t\t\theight,\n\t\t\tlinkTarget,\n\t\t\tsizeSlug,\n\t\t} = attributes;\n\n\t\tconst isExternal = isExternalImage( id, url );\n\t\tconst controls = (\n\t\t\t<BlockControls>\n\t\t\t\t<BlockAlignmentToolbar\n\t\t\t\t\tvalue={ align }\n\t\t\t\t\tonChange={ this.updateAlignment }\n\t\t\t\t/>\n\t\t\t\t{ url && (\n\t\t\t\t\t<MediaReplaceFlow\n\t\t\t\t\t\tmediaURL={ url }\n\t\t\t\t\t\tallowedTypes={ ALLOWED_MEDIA_TYPES }\n\t\t\t\t\t\taccept=\"image/*\"\n\t\t\t\t\t\tonSelect={ this.onSelectImage }\n\t\t\t\t\t\tonSelectURL={ this.onSelectURL }\n\t\t\t\t\t\tonError={ this.onUploadError }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t\t{ url && (\n\t\t\t\t\t<ToolbarGroup>\n\t\t\t\t\t\t<ImageURLInputUI\n\t\t\t\t\t\t\turl={ href || '' }\n\t\t\t\t\t\t\tonChangeUrl={ this.onSetHref }\n\t\t\t\t\t\t\tlinkDestination={ linkDestination }\n\t\t\t\t\t\t\tmediaUrl={\n\t\t\t\t\t\t\t\tthis.props.image && this.props.image.source_url\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmediaLink={\n\t\t\t\t\t\t\t\tthis.props.image && this.props.image.link\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlinkTarget={ linkTarget }\n\t\t\t\t\t\t\tlinkClass={ linkClass }\n\t\t\t\t\t\t\trel={ rel }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ToolbarGroup>\n\t\t\t\t) }\n\t\t\t</BlockControls>\n\t\t);\n\t\tconst src = isExternal ? url : undefined;\n\t\tconst labels = {\n\t\t\ttitle: ! url ? __( 'Image' ) : __( 'Edit image' ),\n\t\t\tinstructions: __(\n\t\t\t\t'Upload an image file, pick one from your media library, or add one with a URL.'\n\t\t\t),\n\t\t};\n\t\tconst mediaPreview = !! url && (\n\t\t\t<img\n\t\t\t\talt={ __( 'Edit image' ) }\n\t\t\t\ttitle={ __( 'Edit image' ) }\n\t\t\t\tclassName={ 'edit-image-preview' }\n\t\t\t\tsrc={ url }\n\t\t\t/>\n\t\t);\n\t\tconst mediaPlaceholder = (\n\t\t\t<MediaPlaceholder\n\t\t\t\ticon={ <BlockIcon icon={ icon } /> }\n\t\t\t\tclassName={ className }\n\t\t\t\tlabels={ labels }\n\t\t\t\tonSelect={ this.onSelectImage }\n\t\t\t\tonSelectURL={ this.onSelectURL }\n\t\t\t\tnotices={ noticeUI }\n\t\t\t\tonError={ this.onUploadError }\n\t\t\t\taccept=\"image/*\"\n\t\t\t\tallowedTypes={ ALLOWED_MEDIA_TYPES }\n\t\t\t\tvalue={ { id, src } }\n\t\t\t\tmediaPreview={ mediaPreview }\n\t\t\t\tdisableMediaButtons={ url }\n\t\t\t/>\n\t\t);\n\t\tif ( ! url ) {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t{ controls }\n\t\t\t\t\t{ mediaPlaceholder }\n\t\t\t\t</>\n\t\t\t);\n\t\t}\n\n\t\tconst classes = classnames( className, {\n\t\t\t'is-transient': isBlobURL( url ),\n\t\t\t'is-resized': !! width || !! height,\n\t\t\t'is-focused': isSelected,\n\t\t\t[ `size-${ sizeSlug }` ]: sizeSlug,\n\t\t} );\n\n\t\tconst isResizable =\n\t\t\t[ 'wide', 'full' ].indexOf( align ) === -1 && isLargeViewport;\n\n\t\tconst imageSizeOptions = this.getImageSizeOptions();\n\n\t\tconst getInspectorControls = ( imageWidth, imageHeight ) => (\n\t\t\t<>\n\t\t\t\t<InspectorControls>\n\t\t\t\t\t<PanelBody title={ __( 'Image settings' ) }>\n\t\t\t\t\t\t<TextareaControl\n\t\t\t\t\t\t\tlabel={ __( 'Alt Text (Alternative Text)' ) }\n\t\t\t\t\t\t\tvalue={ alt }\n\t\t\t\t\t\t\tonChange={ this.updateAlt }\n\t\t\t\t\t\t\thelp={\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<ExternalLink href=\"https://www.w3.org/WAI/tutorials/images/decision-tree\">\n\t\t\t\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t\t\t\t'Describe the purpose of the image'\n\t\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t</ExternalLink>\n\t\t\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t\t\t'Leave empty if the image is purely decorative.'\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ImageSizeControl\n\t\t\t\t\t\t\tonChangeImage={ this.updateImage }\n\t\t\t\t\t\t\tonChange={ ( value ) => setAttributes( value ) }\n\t\t\t\t\t\t\tslug={ sizeSlug }\n\t\t\t\t\t\t\twidth={ width }\n\t\t\t\t\t\t\theight={ height }\n\t\t\t\t\t\t\timageSizeOptions={ imageSizeOptions }\n\t\t\t\t\t\t\tisResizable={ isResizable }\n\t\t\t\t\t\t\timageWidth={ imageWidth }\n\t\t\t\t\t\t\timageHeight={ imageHeight }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</PanelBody>\n\t\t\t\t</InspectorControls>\n\t\t\t\t<InspectorAdvancedControls>\n\t\t\t\t\t<TextControl\n\t\t\t\t\t\tlabel={ __( 'Title Attribute' ) }\n\t\t\t\t\t\tvalue={ title || '' }\n\t\t\t\t\t\tonChange={ this.onSetTitle }\n\t\t\t\t\t\thelp={\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t\t'Describe the role of this image on the page.'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t<ExternalLink href=\"https://www.w3.org/TR/html52/dom.html#the-title-attribute\">\n\t\t\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t\t\t'(Note: many devices and browsers do not display this text.)'\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t</ExternalLink>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</InspectorAdvancedControls>\n\t\t\t</>\n\t\t);\n\n\t\t// Disable reason: Each block can be selected by clicking on it\n\t\t/* eslint-disable jsx-a11y/click-events-have-key-events */\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{ controls }\n\t\t\t\t<figure className={ classes }>\n\t\t\t\t\t<ImageSize src={ url } dirtynessTrigger={ align }>\n\t\t\t\t\t\t{ ( sizes ) => {\n\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\timageWidthWithinContainer,\n\t\t\t\t\t\t\t\timageHeightWithinContainer,\n\t\t\t\t\t\t\t\timageWidth,\n\t\t\t\t\t\t\t\timageHeight,\n\t\t\t\t\t\t\t} = sizes;\n\n\t\t\t\t\t\t\tconst filename = this.getFilename( url );\n\t\t\t\t\t\t\tlet defaultedAlt;\n\t\t\t\t\t\t\tif ( alt ) {\n\t\t\t\t\t\t\t\tdefaultedAlt = alt;\n\t\t\t\t\t\t\t} else if ( filename ) {\n\t\t\t\t\t\t\t\tdefaultedAlt = sprintf(\n\t\t\t\t\t\t\t\t\t__(\n\t\t\t\t\t\t\t\t\t\t'This image has an empty alt attribute; its file name is %s'\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tfilename\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tdefaultedAlt = __(\n\t\t\t\t\t\t\t\t\t'This image has an empty alt attribute'\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst img = (\n\t\t\t\t\t\t\t\t// Disable reason: Image itself is not meant to be interactive, but\n\t\t\t\t\t\t\t\t// should direct focus to block.\n\t\t\t\t\t\t\t\t/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\tsrc={ url }\n\t\t\t\t\t\t\t\t\t\talt={ defaultedAlt }\n\t\t\t\t\t\t\t\t\t\tonClick={ this.onImageClick }\n\t\t\t\t\t\t\t\t\t\tonError={ () =>\n\t\t\t\t\t\t\t\t\t\t\tthis.onImageError( url )\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t{ isBlobURL( url ) && <Spinner /> }\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t/* eslint-enable jsx-a11y/no-noninteractive-element-interactions */\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t! isResizable ||\n\t\t\t\t\t\t\t\t! imageWidthWithinContainer\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t{ getInspectorControls(\n\t\t\t\t\t\t\t\t\t\t\timageWidth,\n\t\t\t\t\t\t\t\t\t\t\timageHeight\n\t\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t\t<div style={ { width, height } }>\n\t\t\t\t\t\t\t\t\t\t\t{ img }\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst currentWidth =\n\t\t\t\t\t\t\t\twidth || imageWidthWithinContainer;\n\t\t\t\t\t\t\tconst currentHeight =\n\t\t\t\t\t\t\t\theight || imageHeightWithinContainer;\n\n\t\t\t\t\t\t\tconst ratio = imageWidth / imageHeight;\n\t\t\t\t\t\t\tconst minWidth =\n\t\t\t\t\t\t\t\timageWidth < imageHeight\n\t\t\t\t\t\t\t\t\t? MIN_SIZE\n\t\t\t\t\t\t\t\t\t: MIN_SIZE * ratio;\n\t\t\t\t\t\t\tconst minHeight =\n\t\t\t\t\t\t\t\timageHeight < imageWidth\n\t\t\t\t\t\t\t\t\t? MIN_SIZE\n\t\t\t\t\t\t\t\t\t: MIN_SIZE / ratio;\n\n\t\t\t\t\t\t\t// With the current implementation of ResizableBox, an image needs an explicit pixel value for the max-width.\n\t\t\t\t\t\t\t// In absence of being able to set the content-width, this max-width is currently dictated by the vanilla editor style.\n\t\t\t\t\t\t\t// The following variable adds a buffer to this vanilla style, so 3rd party themes have some wiggleroom.\n\t\t\t\t\t\t\t// This does, in most cases, allow you to scale the image beyond the width of the main column, though not infinitely.\n\t\t\t\t\t\t\t// @todo It would be good to revisit this once a content-width variable becomes available.\n\t\t\t\t\t\t\tconst maxWidthBuffer = maxWidth * 2.5;\n\n\t\t\t\t\t\t\tlet showRightHandle = false;\n\t\t\t\t\t\t\tlet showLeftHandle = false;\n\n\t\t\t\t\t\t\t/* eslint-disable no-lonely-if */\n\t\t\t\t\t\t\t// See https://github.com/WordPress/gutenberg/issues/7584.\n\t\t\t\t\t\t\tif ( align === 'center' ) {\n\t\t\t\t\t\t\t\t// When the image is centered, show both handles.\n\t\t\t\t\t\t\t\tshowRightHandle = true;\n\t\t\t\t\t\t\t\tshowLeftHandle = true;\n\t\t\t\t\t\t\t} else if ( isRTL ) {\n\t\t\t\t\t\t\t\t// In RTL mode the image is on the right by default.\n\t\t\t\t\t\t\t\t// Show the right handle and hide the left handle only when it is aligned left.\n\t\t\t\t\t\t\t\t// Otherwise always show the left handle.\n\t\t\t\t\t\t\t\tif ( align === 'left' ) {\n\t\t\t\t\t\t\t\t\tshowRightHandle = true;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tshowLeftHandle = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// Show the left handle and hide the right handle only when the image is aligned right.\n\t\t\t\t\t\t\t\t// Otherwise always show the right handle.\n\t\t\t\t\t\t\t\tif ( align === 'right' ) {\n\t\t\t\t\t\t\t\t\tshowLeftHandle = true;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tshowRightHandle = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/* eslint-enable no-lonely-if */\n\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t{ getInspectorControls(\n\t\t\t\t\t\t\t\t\t\timageWidth,\n\t\t\t\t\t\t\t\t\t\timageHeight\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t<ResizableBox\n\t\t\t\t\t\t\t\t\t\tsize={ {\n\t\t\t\t\t\t\t\t\t\t\twidth,\n\t\t\t\t\t\t\t\t\t\t\theight,\n\t\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t\t\tminWidth={ minWidth }\n\t\t\t\t\t\t\t\t\t\tmaxWidth={ maxWidthBuffer }\n\t\t\t\t\t\t\t\t\t\tminHeight={ minHeight }\n\t\t\t\t\t\t\t\t\t\tmaxHeight={ maxWidthBuffer / ratio }\n\t\t\t\t\t\t\t\t\t\tlockAspectRatio\n\t\t\t\t\t\t\t\t\t\tenable={ {\n\t\t\t\t\t\t\t\t\t\t\ttop: false,\n\t\t\t\t\t\t\t\t\t\t\tright: showRightHandle,\n\t\t\t\t\t\t\t\t\t\t\tbottom: true,\n\t\t\t\t\t\t\t\t\t\t\tleft: showLeftHandle,\n\t\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t\t\tonResizeStart={ onResizeStart }\n\t\t\t\t\t\t\t\t\t\tonResizeStop={ (\n\t\t\t\t\t\t\t\t\t\t\tevent,\n\t\t\t\t\t\t\t\t\t\t\tdirection,\n\t\t\t\t\t\t\t\t\t\t\telt,\n\t\t\t\t\t\t\t\t\t\t\tdelta\n\t\t\t\t\t\t\t\t\t\t) => {\n\t\t\t\t\t\t\t\t\t\t\tonResizeStop();\n\t\t\t\t\t\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\t\t\t\t\t\twidth: parseInt(\n\t\t\t\t\t\t\t\t\t\t\t\t\tcurrentWidth + delta.width,\n\t\t\t\t\t\t\t\t\t\t\t\t\t10\n\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t\theight: parseInt(\n\t\t\t\t\t\t\t\t\t\t\t\t\tcurrentHeight +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdelta.height,\n\t\t\t\t\t\t\t\t\t\t\t\t\t10\n\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{ img }\n\t\t\t\t\t\t\t\t\t</ResizableBox>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} }\n\t\t\t\t\t</ImageSize>\n\t\t\t\t\t{ ( ! RichText.isEmpty( caption ) || isSelected ) && (\n\t\t\t\t\t\t<RichText\n\t\t\t\t\t\t\ttagName=\"figcaption\"\n\t\t\t\t\t\t\tplaceholder={ __( 'Write caption…' ) }\n\t\t\t\t\t\t\tvalue={ caption }\n\t\t\t\t\t\t\tunstableOnFocus={ this.onFocusCaption }\n\t\t\t\t\t\t\tonChange={ ( value ) =>\n\t\t\t\t\t\t\t\tsetAttributes( { caption: value } )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tisSelected={ this.state.captionFocused }\n\t\t\t\t\t\t\tinlineToolbar\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t</figure>\n\t\t\t\t{ mediaPlaceholder }\n\t\t\t</>\n\t\t);\n\t\t/* eslint-enable jsx-a11y/click-events-have-key-events */\n\t}\n}\n\nexport default compose( [\n\twithDispatch( ( dispatch ) => {\n\t\tconst { toggleSelection } = dispatch( 'core/block-editor' );\n\n\t\treturn {\n\t\t\tonResizeStart: () => toggleSelection( false ),\n\t\t\tonResizeStop: () => toggleSelection( true ),\n\t\t};\n\t} ),\n\twithSelect( ( select, props ) => {\n\t\tconst { getMedia } = select( 'core' );\n\t\tconst { getSettings } = select( 'core/block-editor' );\n\t\tconst {\n\t\t\tattributes: { id },\n\t\t\tisSelected,\n\t\t} = props;\n\t\tconst { mediaUpload, imageSizes, isRTL, maxWidth } = getSettings();\n\n\t\treturn {\n\t\t\timage: id && isSelected ? getMedia( id ) : null,\n\t\t\tmaxWidth,\n\t\t\tisRTL,\n\t\t\timageSizes,\n\t\t\tmediaUpload,\n\t\t};\n\t} ),\n\twithViewportMatch( { isLargeViewport: 'medium' } ),\n\twithNotices,\n] )( ImageEdit );\n"]}