{"version":3,"sources":["@wordpress/components/src/custom-select-control/index.js"],"names":["useSelect","classnames","Button","Dashicon","itemToString","item","name","stateReducer","selectedItem","type","changes","items","props","stateChangeTypes","ToggleButtonKeyDownArrowDown","Math","min","indexOf","length","ToggleButtonKeyDownArrowUp","max","CustomSelectControl","className","hideLabelFromVision","label","options","onSelectedItemChange","onChange","_selectedItem","value","initialSelectedItem","getLabelProps","getToggleButtonProps","getMenuProps","getItemProps","isOpen","highlightedIndex","menuProps","slice","undefined","map","index","key","style"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { useSelect } from 'downshift';\nimport classnames from 'classnames';\n\n/**\n * Internal dependencies\n */\nimport { Button, Dashicon } from '../';\n\nconst itemToString = ( item ) => item && item.name;\n// This is needed so that in Windows, where\n// the menu does not necessarily open on\n// key up/down, you can still switch between\n// options with the menu closed.\nconst stateReducer = (\n\t{ selectedItem },\n\t{ type, changes, props: { items } }\n) => {\n\tswitch ( type ) {\n\t\tcase useSelect.stateChangeTypes.ToggleButtonKeyDownArrowDown:\n\t\t\t// If we already have a selected item, try to select the next one,\n\t\t\t// without circular navigation. Otherwise, select the first item.\n\t\t\treturn {\n\t\t\t\tselectedItem:\n\t\t\t\t\titems[\n\t\t\t\t\t\tselectedItem ?\n\t\t\t\t\t\t\tMath.min( items.indexOf( selectedItem ) + 1, items.length - 1 ) :\n\t\t\t\t\t\t\t0\n\t\t\t\t\t],\n\t\t\t};\n\t\tcase useSelect.stateChangeTypes.ToggleButtonKeyDownArrowUp:\n\t\t\t// If we already have a selected item, try to select the previous one,\n\t\t\t// without circular navigation. Otherwise, select the last item.\n\t\t\treturn {\n\t\t\t\tselectedItem:\n\t\t\t\t\titems[\n\t\t\t\t\t\tselectedItem ?\n\t\t\t\t\t\t\tMath.max( items.indexOf( selectedItem ) - 1, 0 ) :\n\t\t\t\t\t\t\titems.length - 1\n\t\t\t\t\t],\n\t\t\t};\n\t\tdefault:\n\t\t\treturn changes;\n\t}\n};\nexport default function CustomSelectControl( {\n\tclassName,\n\thideLabelFromVision,\n\tlabel,\n\toptions: items,\n\tonChange: onSelectedItemChange,\n\tvalue: _selectedItem,\n} ) {\n\tconst {\n\t\tgetLabelProps,\n\t\tgetToggleButtonProps,\n\t\tgetMenuProps,\n\t\tgetItemProps,\n\t\tisOpen,\n\t\thighlightedIndex,\n\t\tselectedItem,\n\t} = useSelect( {\n\t\tinitialSelectedItem: items[ 0 ],\n\t\titems,\n\t\titemToString,\n\t\tonSelectedItemChange,\n\t\tselectedItem: _selectedItem,\n\t\tstateReducer,\n\t} );\n\tconst menuProps = getMenuProps( {\n\t\tclassName: 'components-custom-select-control__menu',\n\t} );\n\t// We need this here, because the null active descendant is not\n\t// fully ARIA compliant.\n\tif (\n\t\tmenuProps[ 'aria-activedescendant' ] &&\n\t\tmenuProps[ 'aria-activedescendant' ].slice( 0, 'downshift-null'.length ) ===\n\t\t\t'downshift-null'\n\t) {\n\t\tdelete menuProps[ 'aria-activedescendant' ];\n\t}\n\treturn (\n\t\t<div className={ classnames( 'components-custom-select-control', className ) }>\n\t\t\t{ /* eslint-disable-next-line jsx-a11y/label-has-associated-control, jsx-a11y/label-has-for */ }\n\t\t\t<label\n\t\t\t\t{ ...getLabelProps( {\n\t\t\t\t\tclassName: classnames( 'components-custom-select-control__label', {\n\t\t\t\t\t\t'screen-reader-text': hideLabelFromVision,\n\t\t\t\t\t} ),\n\t\t\t\t} ) }\n\t\t\t>\n\t\t\t\t{ label }\n\t\t\t</label>\n\t\t\t<Button\n\t\t\t\t{ ...getToggleButtonProps( {\n\t\t\t\t\t// This is needed because some speech recognition software don't support `aria-labelledby`.\n\t\t\t\t\t'aria-label': label,\n\t\t\t\t\t'aria-labelledby': undefined,\n\t\t\t\t\tclassName: 'components-custom-select-control__button',\n\t\t\t\t} ) }\n\t\t\t>\n\t\t\t\t{ itemToString( selectedItem ) }\n\t\t\t\t<Dashicon\n\t\t\t\t\ticon=\"arrow-down-alt2\"\n\t\t\t\t\tclassName=\"components-custom-select-control__button-icon\"\n\t\t\t\t/>\n\t\t\t</Button>\n\t\t\t<ul { ...menuProps }>\n\t\t\t\t{ isOpen &&\n\t\t\t\t\titems.map( ( item, index ) => (\n\t\t\t\t\t\t// eslint-disable-next-line react/jsx-key\n\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t{ ...getItemProps( {\n\t\t\t\t\t\t\t\titem,\n\t\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\t\tkey: item.key,\n\t\t\t\t\t\t\t\tclassName: classnames(\n\t\t\t\t\t\t\t\t\t'components-custom-select-control__item',\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t'is-highlighted': index === highlightedIndex,\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tstyle: item.style,\n\t\t\t\t\t\t\t} ) }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ item === selectedItem && (\n\t\t\t\t\t\t\t\t<Dashicon\n\t\t\t\t\t\t\t\t\ticon=\"saved\"\n\t\t\t\t\t\t\t\t\tclassName=\"components-custom-select-control__item-icon\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t{ item.name }\n\t\t\t\t\t\t</li>\n\t\t\t\t\t) ) }\n\t\t\t</ul>\n\t\t</div>\n\t);\n}\n"]}