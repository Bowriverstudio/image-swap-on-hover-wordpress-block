{"version":3,"sources":["@wordpress/components/src/mobile/bottom-sheet/range-cell.native.js"],"names":["Platform","AccessibilityInfo","findNodeHandle","TextInput","View","PixelRatio","AppState","Slider","_x","__","sprintf","Component","withPreferredColorScheme","Cell","styles","borderStyles","BottomSheetRangeCell","props","handleToggleFocus","bind","handleChange","handleValueSave","handleReset","onChangeValue","onCellPress","handleChangePixelRatio","initialValue","validateInput","value","defaultValue","minimumValue","fontScale","getFontScale","state","accessible","sliderValue","hasFocus","reset","addEventListener","removeEventListener","nextAppState","setState","text","isNaN","Number","announceCurrentValue","newState","maximumValue","Math","min","max","replace","onChange","sliderRef","reactTag","setAccessibilityFocus","announcement","announceForAccessibility","disabled","step","preferredColorScheme","minimumTrackTintColor","maximumTrackTintColor","OS","thumbTintColor","getStylesFromColorScheme","allowReset","cellProps","accessibilityLabel","label","defaultSliderStyle","sliderTextInput","sliderDarkTextInput","resetButtonText","resetButton","title","handler","cellContainerStyles","cellRowStyles","undefined","container","slider","borderStyle","isSelected","width"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { Platform, AccessibilityInfo, findNodeHandle, TextInput, View, PixelRatio, AppState } from 'react-native';\nimport Slider from '@react-native-community/slider';\n\n/**\n * WordPress dependencies\n */\nimport { _x, __, sprintf } from '@wordpress/i18n';\nimport { Component } from '@wordpress/element';\nimport { withPreferredColorScheme } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport Cell from './cell';\nimport styles from './range-cell.scss';\nimport borderStyles from './borderStyles.scss';\n\nclass BottomSheetRangeCell extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\t\tthis.handleToggleFocus = this.handleToggleFocus.bind( this );\n\t\tthis.handleChange = this.handleChange.bind( this );\n\t\tthis.handleValueSave = this.handleValueSave.bind( this );\n\t\tthis.handleReset = this.handleReset.bind( this );\n\t\tthis.onChangeValue = this.onChangeValue.bind( this );\n\t\tthis.onCellPress = this.onCellPress.bind( this );\n\t\tthis.handleChangePixelRatio = this.handleChangePixelRatio.bind( this );\n\n\t\tconst initialValue = this.validateInput( props.value || props.defaultValue || props.minimumValue );\n\t\tconst fontScale = this.getFontScale();\n\n\t\tthis.state = { accessible: true, sliderValue: initialValue, initialValue, hasFocus: false, fontScale };\n\t}\n\n\tcomponentDidUpdate( ) {\n\t\tconst reset = this.props.value === null;\n\t\tif ( reset ) {\n\t\t\tthis.handleReset();\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tAppState.addEventListener( 'change', this.handleChangePixelRatio );\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.handleToggleFocus();\n\t\tAppState.removeEventListener( 'change', this.handleChangePixelRatio );\n\t}\n\n\tgetFontScale() {\n\t\treturn PixelRatio.getFontScale() < 1 ? 1 : PixelRatio.getFontScale();\n\t}\n\n\thandleChangePixelRatio( nextAppState ) {\n\t\tif ( nextAppState === 'active' ) {\n\t\t\tthis.setState( { fontScale: this.getFontScale() } );\n\t\t}\n\t}\n\n\thandleChange( text ) {\n\t\tif ( ! isNaN( Number( text ) ) ) {\n\t\t\tthis.setState( { sliderValue: text } );\n\t\t\tthis.announceCurrentValue( text );\n\t\t}\n\t}\n\n\thandleReset() {\n\t\tthis.handleValueSave( this.props.defaultValue || this.state.initialValue );\n\t}\n\n\thandleToggleFocus( validateInput = true ) {\n\t\tconst newState = { hasFocus: ! this.state.hasFocus };\n\n\t\tif ( validateInput ) {\n\t\t\tconst sliderValue = this.validateInput( this.state.sliderValue );\n\t\t\tthis.handleValueSave( sliderValue );\n\t\t}\n\n\t\tthis.setState( newState );\n\t}\n\n\tvalidateInput( text ) {\n\t\tconst { minimumValue, maximumValue } = this.props;\n\t\tif ( ! text ) {\n\t\t\treturn minimumValue;\n\t\t}\n\t\tif ( typeof text === 'number' ) {\n\t\t\treturn Math.min( Math.max( text, minimumValue ), maximumValue );\n\t\t}\n\t\treturn Math.min( Math.max( text.replace( /[^0-9]/g, '' ).replace( /^0+(?=\\d)/, '' ), minimumValue ), maximumValue );\n\t}\n\n\thandleValueSave( text ) {\n\t\tif ( ! isNaN( Number( text ) ) ) {\n\t\t\tthis.onChangeValue( text );\n\t\t\tthis.setState( { sliderValue: text } );\n\t\t\tthis.announceCurrentValue( text );\n\t\t}\n\t}\n\n\tonChangeValue( initialValue ) {\n\t\tconst { minimumValue, maximumValue, onChange } = this.props;\n\n\t\tlet sliderValue = initialValue;\n\t\tif ( sliderValue < minimumValue ) {\n\t\t\tsliderValue = minimumValue;\n\t\t} else if ( sliderValue > maximumValue ) {\n\t\t\tsliderValue = maximumValue;\n\t\t}\n\t\tonChange( sliderValue );\n\t}\n\n\tonCellPress() {\n\t\tthis.setState( { accessible: false } );\n\t\tif ( this.sliderRef ) {\n\t\t\tconst reactTag = findNodeHandle( this.sliderRef );\n\t\t\tAccessibilityInfo.setAccessibilityFocus( reactTag );\n\t\t}\n\t}\n\n\tannounceCurrentValue( value ) {\n\t\tconst announcement = sprintf( __( 'Current value is %s' ), value );\n\t\tAccessibilityInfo.announceForAccessibility( announcement );\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tvalue,\n\t\t\tdefaultValue,\n\t\t\tminimumValue = 0,\n\t\t\tmaximumValue = 10,\n\t\t\tdisabled,\n\t\t\tstep = 1,\n\t\t\tpreferredColorScheme,\n\t\t\tminimumTrackTintColor = preferredColorScheme === 'light' ? '#00669b' : '#5198d9',\n\t\t\tmaximumTrackTintColor = Platform.OS === 'ios' ? '#e9eff3' : '#909090',\n\t\t\tthumbTintColor = Platform.OS === 'android' && '#00669b',\n\t\t\tgetStylesFromColorScheme,\n\t\t\tallowReset = true,\n\t\t\t...cellProps\n\t\t} = this.props;\n\n\t\tconst { hasFocus, sliderValue, accessible, fontScale } = this.state;\n\n\t\tconst accessibilityLabel =\n\t\tsprintf(\n\t\t\t/* translators: accessibility text. Inform about current value. %1$s: Control label %2$s: Current value. */\n\t\t\t_x( '%1$s. Current value is %2$s', 'Slider for picking a number inside a range' ),\n\t\t\tcellProps.label, value\n\t\t);\n\n\t\tconst defaultSliderStyle = getStylesFromColorScheme( styles.sliderTextInput, styles.sliderDarkTextInput );\n\t\tconst resetButtonText = Platform.OS === 'ios' ? __( 'Reset' ) : __( 'RESET' );\n\t\tconst resetButton = { title: resetButtonText, handler: this.handleReset };\n\n\t\treturn (\n\t\t\t<Cell\n\t\t\t\t{ ...cellProps }\n\t\t\t\tcellContainerStyle={ styles.cellContainerStyles }\n\t\t\t\tcellRowContainerStyle={ styles.cellRowStyles }\n\t\t\t\taccessibilityRole={ 'none' }\n\t\t\t\teditable={ false }\n\t\t\t\taccessible={ accessible }\n\t\t\t\tonPress={ this.onCellPress }\n\t\t\t\taccessibilityLabel={ accessibilityLabel }\n\t\t\t\tcustomActionButton={ allowReset ? resetButton : undefined }\n\t\t\t\taccessibilityHint={\n\t\t\t\t\t/* translators: accessibility text (hint for focusing a slider) */\n\t\t\t\t\t__( 'Double tap to change the value using slider' )\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t<View style={ styles.container }>\n\t\t\t\t\t<Slider\n\t\t\t\t\t\tvalue={ this.validateInput( sliderValue ) }\n\t\t\t\t\t\tdefaultValue={ defaultValue }\n\t\t\t\t\t\tdisabled={ disabled }\n\t\t\t\t\t\tstep={ step }\n\t\t\t\t\t\tminimumValue={ minimumValue }\n\t\t\t\t\t\tmaximumValue={ maximumValue }\n\t\t\t\t\t\tminimumTrackTintColor={ minimumTrackTintColor }\n\t\t\t\t\t\tmaximumTrackTintColor={ maximumTrackTintColor }\n\t\t\t\t\t\tthumbTintColor={ thumbTintColor }\n\t\t\t\t\t\tonValueChange={ this.handleChange }\n\t\t\t\t\t\tonSlidingComplete={ this.handleValueSave }\n\t\t\t\t\t\tref={ ( slider ) => {\n\t\t\t\t\t\t\tthis.sliderRef = slider;\n\t\t\t\t\t\t} }\n\t\t\t\t\t\tstyle={ styles.slider }\n\t\t\t\t\t\taccessibilityRole={ 'adjustable' }\n\t\t\t\t\t/>\n\t\t\t\t\t<TextInput\n\t\t\t\t\t\tstyle={ [\n\t\t\t\t\t\t\tdefaultSliderStyle,\n\t\t\t\t\t\t\tborderStyles.borderStyle,\n\t\t\t\t\t\t\thasFocus && borderStyles.isSelected,\n\t\t\t\t\t\t\t{ width: 40 * fontScale },\n\t\t\t\t\t\t] }\n\t\t\t\t\t\tonChangeText={ this.handleChange }\n\t\t\t\t\t\tonFocus={ this.handleToggleFocus }\n\t\t\t\t\t\tonBlur={ this.handleToggleFocus }\n\t\t\t\t\t\tkeyboardType=\"number-pad\"\n\t\t\t\t\t\treturnKeyType=\"done\"\n\t\t\t\t\t\tvalue={ `${ sliderValue }` }\n\t\t\t\t\t/>\n\t\t\t\t</View>\n\t\t\t</Cell>\n\t\t);\n\t}\n}\n\nexport default withPreferredColorScheme( BottomSheetRangeCell );\n"]}