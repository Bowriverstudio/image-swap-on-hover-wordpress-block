{"version":3,"sources":["@wordpress/components/src/toolbar-button/accessible-toolbar-button-container.js"],"names":["useToolbarItem","Children","cloneElement","useContext","ToolbarContext","AccessibleToolbarButtonContainer","props","accessibleToolbarState","childButton","only","children","itemHTMLProps"],"mappings":";;AAAA;;;AAGA,SAASA,cAAT,QAA+B,gBAA/B;AAEA;;;;AAGA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,UAAjC,QAAmD,oBAAnD;AAEA;;;;AAGA,OAAOC,cAAP,MAA2B,oBAA3B;;AAEA,SAASC,gCAAT,CAA2CC,KAA3C,EAAmD;AAClD,MAAMC,sBAAsB,GAAGJ,UAAU,CAAEC,cAAF,CAAzC;AACA,MAAMI,WAAW,GAAGP,QAAQ,CAACQ,IAAT,CAAeH,KAAK,CAACI,QAArB,CAApB,CAFkD,CAIlD;;AACA,MAAMC,aAAa,GAAGX,cAAc,CAAEO,sBAAF,EAA0BC,WAAW,CAACF,KAAtC,CAApC;AAEA,SAAO,qBAAUA,KAAV,EAAoBJ,YAAY,CAAEM,WAAF,EAAeG,aAAf,CAAhC,CAAP;AACA;;AAED,eAAeN,gCAAf","sourcesContent":["/**\n * External dependencies\n */\nimport { useToolbarItem } from 'reakit/Toolbar';\n\n/**\n * WordPress dependencies\n */\nimport { Children, cloneElement, useContext } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport ToolbarContext from '../toolbar-context';\n\nfunction AccessibleToolbarButtonContainer( props ) {\n\tconst accessibleToolbarState = useContext( ToolbarContext );\n\tconst childButton = Children.only( props.children );\n\n\t// https://reakit.io/docs/composition/#props-hooks\n\tconst itemHTMLProps = useToolbarItem( accessibleToolbarState, childButton.props );\n\n\treturn <div { ...props }>{ cloneElement( childButton, itemHTMLProps ) }</div>;\n}\n\nexport default AccessibleToolbarButtonContainer;\n"]}