{"version":3,"sources":["@wordpress/components/src/custom-gradient-picker/utils.js"],"names":["tinyColorRgbToGradientColorStop","r","g","b","a","type","value","getGradientWithColorStopAdded","gradientAST","relativePosition","rgbaColor","colorStop","length","colorStops","getGradientWithPositionAtIndexChanged","index","map","colorStopIndex","isControlPointOverlapping","position","initialIndex","initialPosition","parseInt","minPosition","Math","min","maxPosition","max","itemPosition","abs","MINIMUM_DISTANCE_BETWEEN_POINTS","getGradientWithPositionAtIndexSummed","valueToSum","currentPosition","newPosition","getGradientWithPositionAtIndexIncreased","getGradientWithPositionAtIndexDecreased","getGradientWithColorAtIndexChanged","getGradientWithColorAtPositionChanged","relativePositionValue","toString","getGradientWithControlPointRemoved","filter","elem","elemIndex","getHorizontalRelativeGradientPosition","mouseXCoordinate","containerElement","positionedElementWidth","getBoundingClientRect","x","width","absolutePositionValue","MINIMUM_ABSOLUTE_LEFT_POSITION","availableWidth","INSERT_POINT_WIDTH","round","getMarkerPoints","color","positionValue"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { findIndex, map, some } from 'lodash';\n\n/**\n * Internal dependencies\n */\nimport {\n\tINSERT_POINT_WIDTH,\n\tMINIMUM_ABSOLUTE_LEFT_POSITION,\n\tMINIMUM_DISTANCE_BETWEEN_POINTS,\n} from './constants';\nimport {\n\tserializeGradientColor,\n\tserializeGradientPosition,\n} from './serializer';\n\nfunction tinyColorRgbToGradientColorStop( { r, g, b, a } ) {\n\tif ( a === 1 ) {\n\t\treturn {\n\t\t\ttype: 'rgb',\n\t\t\tvalue: [ r, g, b ],\n\t\t};\n\t}\n\treturn {\n\t\ttype: 'rgba',\n\t\tvalue: [ r, g, b, a ],\n\t};\n}\n\nexport function getGradientWithColorStopAdded( gradientAST, relativePosition, rgbaColor ) {\n\tconst colorStop = tinyColorRgbToGradientColorStop( rgbaColor );\n\tcolorStop.length = {\n\t\ttype: '%',\n\t\tvalue: relativePosition,\n\t};\n\treturn {\n\t\t...gradientAST,\n\t\tcolorStops: [\n\t\t\t...gradientAST.colorStops,\n\t\t\tcolorStop,\n\t\t],\n\t};\n}\n\nexport function getGradientWithPositionAtIndexChanged( gradientAST, index, relativePosition ) {\n\treturn {\n\t\t...gradientAST,\n\t\tcolorStops: gradientAST.colorStops.map(\n\t\t\t( colorStop, colorStopIndex ) => {\n\t\t\t\tif ( colorStopIndex !== index ) {\n\t\t\t\t\treturn colorStop;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\t...colorStop,\n\t\t\t\t\tlength: {\n\t\t\t\t\t\t...colorStop.length,\n\t\t\t\t\t\tvalue: relativePosition,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}\n\t\t),\n\t};\n}\n\nexport function isControlPointOverlapping( gradientAST, position, initialIndex ) {\n\tconst initialPosition = parseInt( gradientAST.colorStops[ initialIndex ].length.value );\n\tconst minPosition = Math.min( initialPosition, position );\n\tconst maxPosition = Math.max( initialPosition, position );\n\n\treturn some(\n\t\tgradientAST.colorStops,\n\t\t( { length }, index ) => {\n\t\t\tconst itemPosition = parseInt( length.value );\n\t\t\treturn index !== initialIndex && (\n\t\t\t\tMath.abs( itemPosition - position ) < MINIMUM_DISTANCE_BETWEEN_POINTS ||\n\t\t\t\t( minPosition < itemPosition && itemPosition < maxPosition )\n\t\t\t);\n\t\t}\n\t);\n}\n\nfunction getGradientWithPositionAtIndexSummed( gradientAST, index, valueToSum ) {\n\tconst currentPosition = gradientAST.colorStops[ index ].length.value;\n\tconst newPosition = Math.max( 0, Math.min( 100, parseInt( currentPosition ) + valueToSum ) );\n\tif ( isControlPointOverlapping( gradientAST, newPosition, index ) ) {\n\t\treturn gradientAST;\n\t}\n\treturn getGradientWithPositionAtIndexChanged( gradientAST, index, newPosition );\n}\n\nexport function getGradientWithPositionAtIndexIncreased( gradientAST, index ) {\n\treturn getGradientWithPositionAtIndexSummed( gradientAST, index, MINIMUM_DISTANCE_BETWEEN_POINTS );\n}\n\nexport function getGradientWithPositionAtIndexDecreased( gradientAST, index ) {\n\treturn getGradientWithPositionAtIndexSummed( gradientAST, index, -MINIMUM_DISTANCE_BETWEEN_POINTS );\n}\n\nexport function getGradientWithColorAtIndexChanged( gradientAST, index, rgbaColor ) {\n\treturn {\n\t\t...gradientAST,\n\t\tcolorStops: gradientAST.colorStops.map(\n\t\t\t( colorStop, colorStopIndex ) => {\n\t\t\t\tif ( colorStopIndex !== index ) {\n\t\t\t\t\treturn colorStop;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\t...colorStop,\n\t\t\t\t\t...tinyColorRgbToGradientColorStop( rgbaColor ),\n\t\t\t\t};\n\t\t\t}\n\t\t),\n\t};\n}\n\nexport function getGradientWithColorAtPositionChanged( gradientAST, relativePositionValue, rgbaColor ) {\n\tconst index = findIndex( gradientAST.colorStops, ( colorStop ) => {\n\t\treturn (\n\t\t\tcolorStop &&\n\t\t\tcolorStop.length &&\n\t\t\tcolorStop.length.type === '%' &&\n\t\t\tcolorStop.length.value === relativePositionValue.toString()\n\t\t);\n\t} );\n\treturn getGradientWithColorAtIndexChanged( gradientAST, index, rgbaColor );\n}\n\nexport function getGradientWithControlPointRemoved( gradientAST, index ) {\n\treturn {\n\t\t...gradientAST,\n\t\tcolorStops: gradientAST.colorStops.filter( ( elem, elemIndex ) => {\n\t\t\treturn elemIndex !== index;\n\t\t} ),\n\t};\n}\n\nexport function getHorizontalRelativeGradientPosition( mouseXCoordinate, containerElement, positionedElementWidth ) {\n\tif ( ! containerElement ) {\n\t\treturn;\n\t}\n\tconst { x, width } = containerElement.getBoundingClientRect();\n\tconst absolutePositionValue = mouseXCoordinate - x - MINIMUM_ABSOLUTE_LEFT_POSITION - ( positionedElementWidth / 2 );\n\tconst availableWidth = width - MINIMUM_ABSOLUTE_LEFT_POSITION - INSERT_POINT_WIDTH;\n\treturn Math.round(\n\t\tMath.min( Math.max( ( absolutePositionValue * 100 ) / availableWidth, 0 ), 100 )\n\t);\n}\n\n/**\n * Returns the marker points from a gradient AST.\n *\n * @param {Object} gradientAST An object representing the gradient AST.\n *\n * @return {Array.<{color: string, position: string, positionValue: number}>}\n *         An array of markerPoint objects.\n *         color:         A string with the color code ready to be used in css style e.g: \"rgba( 1, 2 , 3, 0.5)\".\n *         position:      A string with the position ready to be used in css style e.g: \"70%\".\n *         positionValue: A number with the relative position value e.g: 70.\n */\nexport function getMarkerPoints( gradientAST ) {\n\tif ( ! gradientAST ) {\n\t\treturn [];\n\t}\n\treturn map( gradientAST.colorStops, ( colorStop ) => {\n\t\tif ( ! colorStop || ! colorStop.length || colorStop.length.type !== '%' ) {\n\t\t\treturn null;\n\t\t}\n\t\treturn {\n\t\t\tcolor: serializeGradientColor( colorStop ),\n\t\t\tposition: serializeGradientPosition( colorStop.length ),\n\t\t\tpositionValue: parseInt( colorStop.length.value ),\n\t\t};\n\t} );\n}\n"]}