{"version":3,"sources":["@wordpress/components/src/popover/utils.js"],"names":["HEIGHT_OFFSET","isRTL","document","documentElement","dir","computePopoverXAxisPosition","anchorRect","contentSize","xAxis","chosenYAxis","width","anchorMidPoint","Math","round","left","centerAlignment","popoverLeft","contentWidth","window","innerWidth","leftAlignmentX","leftAlignment","rightAlignmentX","right","rightAlignment","chosenXAxis","chosenWidth","computePopoverYAxisPosition","yAxis","height","top","middleAlignment","popoverTop","contentHeight","innerHeight","topAlignment","bottomAlignment","bottom","chosenHeight","computePopoverPosition","position","split","yAxisPosition","xAxisPosition"],"mappings":"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","sourcesContent":["\n/**\n * Module constants\n */\nconst HEIGHT_OFFSET = 10; // used by the arrow and a bit of empty space\nconst isRTL = () => document.documentElement.dir === 'rtl';\n\n/**\n * Utility used to compute the popover position over the xAxis\n *\n * @param {Object} anchorRect       Anchor Rect.\n * @param {Object} contentSize      Content Size.\n * @param {string} xAxis            Desired xAxis.\n * @param {string} chosenYAxis      yAxis to be used.\n *\n * @return {Object} Popover xAxis position and constraints.\n */\nexport function computePopoverXAxisPosition( anchorRect, contentSize, xAxis, chosenYAxis ) {\n\tconst { width } = contentSize;\n\t// Correct xAxis for RTL support\n\tif ( xAxis === 'left' && isRTL() ) {\n\t\txAxis = 'right';\n\t} else if ( xAxis === 'right' && isRTL() ) {\n\t\txAxis = 'left';\n\t}\n\n\t// x axis alignment choices\n\tconst anchorMidPoint = Math.round( anchorRect.left + ( anchorRect.width / 2 ) );\n\tconst centerAlignment = {\n\t\tpopoverLeft: anchorMidPoint,\n\t\tcontentWidth: (\n\t\t\t( anchorMidPoint - ( width / 2 ) > 0 ? ( width / 2 ) : anchorMidPoint ) +\n\t\t\t( anchorMidPoint + ( width / 2 ) > window.innerWidth ? window.innerWidth - anchorMidPoint : ( width / 2 ) )\n\t\t),\n\t};\n\tconst leftAlignmentX = chosenYAxis === 'middle' ? anchorRect.left : anchorMidPoint;\n\tconst leftAlignment = {\n\t\tpopoverLeft: leftAlignmentX,\n\t\tcontentWidth: leftAlignmentX - width > 0 ? width : leftAlignmentX,\n\t};\n\tconst rightAlignmentX = chosenYAxis === 'middle' ? anchorRect.right : anchorMidPoint;\n\tconst rightAlignment = {\n\t\tpopoverLeft: rightAlignmentX,\n\t\tcontentWidth: rightAlignmentX + width > window.innerWidth ? window.innerWidth - rightAlignmentX : width,\n\t};\n\n\t// Choosing the x axis\n\tlet chosenXAxis;\n\tlet contentWidth = null;\n\tif ( xAxis === 'center' && centerAlignment.contentWidth === width ) {\n\t\tchosenXAxis = 'center';\n\t} else if ( xAxis === 'left' && leftAlignment.contentWidth === width ) {\n\t\tchosenXAxis = 'left';\n\t} else if ( xAxis === 'right' && rightAlignment.contentWidth === width ) {\n\t\tchosenXAxis = 'right';\n\t} else {\n\t\tchosenXAxis = leftAlignment.contentWidth > rightAlignment.contentWidth ? 'left' : 'right';\n\t\tconst chosenWidth = chosenXAxis === 'left' ? leftAlignment.contentWidth : rightAlignment.contentWidth;\n\t\tcontentWidth = chosenWidth !== width ? chosenWidth : null;\n\t}\n\n\tlet popoverLeft;\n\tif ( chosenXAxis === 'center' ) {\n\t\tpopoverLeft = centerAlignment.popoverLeft;\n\t} else if ( chosenXAxis === 'left' ) {\n\t\tpopoverLeft = leftAlignment.popoverLeft;\n\t} else {\n\t\tpopoverLeft = rightAlignment.popoverLeft;\n\t}\n\n\treturn {\n\t\txAxis: chosenXAxis,\n\t\tpopoverLeft,\n\t\tcontentWidth,\n\t};\n}\n\n/**\n * Utility used to compute the popover position over the yAxis\n *\n * @param {Object} anchorRect       Anchor Rect.\n * @param {Object} contentSize      Content Size.\n * @param {string} yAxis            Desired yAxis.\n *\n * @return {Object} Popover xAxis position and constraints.\n */\nexport function computePopoverYAxisPosition( anchorRect, contentSize, yAxis ) {\n\tconst { height } = contentSize;\n\n\t// y axis alignment choices\n\tconst anchorMidPoint = anchorRect.top + ( anchorRect.height / 2 );\n\tconst middleAlignment = {\n\t\tpopoverTop: anchorMidPoint,\n\t\tcontentHeight: (\n\t\t\t( anchorMidPoint - ( height / 2 ) > 0 ? ( height / 2 ) : anchorMidPoint ) +\n\t\t\t( anchorMidPoint + ( height / 2 ) > window.innerHeight ? window.innerHeight - anchorMidPoint : ( height / 2 ) )\n\t\t),\n\t};\n\tconst topAlignment = {\n\t\tpopoverTop: anchorRect.top,\n\t\tcontentHeight: anchorRect.top - HEIGHT_OFFSET - height > 0 ? height : anchorRect.top - HEIGHT_OFFSET,\n\t};\n\tconst bottomAlignment = {\n\t\tpopoverTop: anchorRect.bottom,\n\t\tcontentHeight: anchorRect.bottom + HEIGHT_OFFSET + height > window.innerHeight ? window.innerHeight - HEIGHT_OFFSET - anchorRect.bottom : height,\n\t};\n\n\t// Choosing the y axis\n\tlet chosenYAxis;\n\tlet contentHeight = null;\n\tif ( yAxis === 'middle' && middleAlignment.contentHeight === height ) {\n\t\tchosenYAxis = 'middle';\n\t} else if ( yAxis === 'top' && topAlignment.contentHeight === height ) {\n\t\tchosenYAxis = 'top';\n\t} else if ( yAxis === 'bottom' && bottomAlignment.contentHeight === height ) {\n\t\tchosenYAxis = 'bottom';\n\t} else {\n\t\tchosenYAxis = topAlignment.contentHeight > bottomAlignment.contentHeight ? 'top' : 'bottom';\n\t\tconst chosenHeight = chosenYAxis === 'top' ? topAlignment.contentHeight : bottomAlignment.contentHeight;\n\t\tcontentHeight = chosenHeight !== height ? chosenHeight : null;\n\t}\n\n\tlet popoverTop;\n\tif ( chosenYAxis === 'middle' ) {\n\t\tpopoverTop = middleAlignment.popoverTop;\n\t} else if ( chosenYAxis === 'top' ) {\n\t\tpopoverTop = topAlignment.popoverTop;\n\t} else {\n\t\tpopoverTop = bottomAlignment.popoverTop;\n\t}\n\n\treturn {\n\t\tyAxis: chosenYAxis,\n\t\tpopoverTop,\n\t\tcontentHeight,\n\t};\n}\n\n/**\n * Utility used to compute the popover position and the content max width/height for a popover\n * given its anchor rect and its content size.\n *\n * @param {Object} anchorRect       Anchor Rect.\n * @param {Object} contentSize      Content Size.\n * @param {string} position         Position.\n *\n * @return {Object} Popover position and constraints.\n */\nexport function computePopoverPosition( anchorRect, contentSize, position = 'top' ) {\n\tconst [ yAxis, xAxis = 'center' ] = position.split( ' ' );\n\n\tconst yAxisPosition = computePopoverYAxisPosition( anchorRect, contentSize, yAxis );\n\tconst xAxisPosition = computePopoverXAxisPosition( anchorRect, contentSize, xAxis, yAxisPosition.yAxis );\n\n\treturn {\n\t\t...xAxisPosition,\n\t\t...yAxisPosition,\n\t};\n}\n"]}