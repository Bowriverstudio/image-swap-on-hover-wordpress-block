{"version":3,"sources":["@wordpress/components/src/toolbar-group/toolbar-group-collapsed.js"],"names":["ToolbarGroupCollapsed","controls","className","icon","label","props","accessibleToolbarState","ToolbarContext","renderDropdownMenu","toggleProps","toolbarItemHTMLProps"],"mappings":";;;;;;;;;AAQA;;;;;;AALA;;AAUA;;AACA;;AAdA;;;;AAKA;;;;AAKA;;;AAMA,SAASA,qBAAT,OAMI;AAAA,2BALHC,QAKG;AAAA,MALHA,QAKG,8BALQ,EAKR;AAAA,MAJHC,SAIG,QAJHA,SAIG;AAAA,MAHHC,IAGG,QAHHA,IAGG;AAAA,MAFHC,KAEG,QAFHA,KAEG;AAAA,MADAC,KACA;AACH;AACA;AACA,MAAMC,sBAAsB,GAAG,yBAAYC,uBAAZ,CAA/B;;AAEA,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAEC,WAAF;AAAA,WAC1B,4BAAC,qBAAD;AACC,MAAA,iBAAiB,MADlB;AAEC,MAAA,IAAI,EAAGN,IAFR;AAGC,MAAA,KAAK,EAAGC,KAHT;AAIC,MAAA,QAAQ,EAAGH,QAJZ;AAKC,MAAA,SAAS,EAAGC,SALb;AAMC,MAAA,WAAW,EAAGO;AANf,OAOMJ,KAPN,EAD0B;AAAA,GAA3B;;AAYA,MAAKC,sBAAL,EAA8B;AAC7B,WACC;AACA,kCAAC,oBAAD,EAAkBA,sBAAlB,EACG,UAAEI,oBAAF;AAAA,eAA4BF,kBAAkB,CAAEE,oBAAF,CAA9C;AAAA,OADH;AAFD;AAMA;;AAED,SAAOF,kBAAkB,EAAzB;AACA;;eAEcR,qB","sourcesContent":["/**\n * External dependencies\n */\nimport { ToolbarItem } from 'reakit/Toolbar';\n\n/**\n * WordPress dependencies\n */\nimport { useContext } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport DropdownMenu from '../dropdown-menu';\nimport ToolbarContext from '../toolbar-context';\n\nfunction ToolbarGroupCollapsed( {\n\tcontrols = [],\n\tclassName,\n\ticon,\n\tlabel,\n\t...props\n} ) {\n\t// It'll contain state if `ToolbarGroup` is being used within\n\t// `<Toolbar __experimentalAccessibilityLabel=\"label\" />`\n\tconst accessibleToolbarState = useContext( ToolbarContext );\n\n\tconst renderDropdownMenu = ( toggleProps ) => (\n\t\t<DropdownMenu\n\t\t\thasArrowIndicator\n\t\t\ticon={ icon }\n\t\t\tlabel={ label }\n\t\t\tcontrols={ controls }\n\t\t\tclassName={ className }\n\t\t\ttoggleProps={ toggleProps }\n\t\t\t{ ...props }\n\t\t/>\n\t);\n\n\tif ( accessibleToolbarState ) {\n\t\treturn (\n\t\t\t// https://reakit.io/docs/composition/#render-props\n\t\t\t<ToolbarItem { ...accessibleToolbarState }>\n\t\t\t\t{ ( toolbarItemHTMLProps ) => renderDropdownMenu( toolbarItemHTMLProps ) }\n\t\t\t</ToolbarItem>\n\t\t);\n\t}\n\n\treturn renderDropdownMenu();\n}\n\nexport default ToolbarGroupCollapsed;\n"]}