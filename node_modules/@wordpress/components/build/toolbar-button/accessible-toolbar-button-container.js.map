{"version":3,"sources":["@wordpress/components/src/toolbar-button/accessible-toolbar-button-container.js"],"names":["AccessibleToolbarButtonContainer","props","accessibleToolbarState","ToolbarContext","childButton","Children","only","children","itemHTMLProps"],"mappings":";;;;;;;;;AAQA;;AALA;;AAUA;;AAbA;;;;AAKA;;;;AAKA;;;AAKA,SAASA,gCAAT,CAA2CC,KAA3C,EAAmD;AAClD,MAAMC,sBAAsB,GAAG,yBAAYC,uBAAZ,CAA/B;;AACA,MAAMC,WAAW,GAAGC,kBAASC,IAAT,CAAeL,KAAK,CAACM,QAArB,CAApB,CAFkD,CAIlD;;;AACA,MAAMC,aAAa,GAAG,6BAAgBN,sBAAhB,EAAwCE,WAAW,CAACH,KAApD,CAAtB;AAEA,SAAO,mCAAUA,KAAV,EAAoB,2BAAcG,WAAd,EAA2BI,aAA3B,CAApB,CAAP;AACA;;eAEcR,gC","sourcesContent":["/**\n * External dependencies\n */\nimport { useToolbarItem } from 'reakit/Toolbar';\n\n/**\n * WordPress dependencies\n */\nimport { Children, cloneElement, useContext } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport ToolbarContext from '../toolbar-context';\n\nfunction AccessibleToolbarButtonContainer( props ) {\n\tconst accessibleToolbarState = useContext( ToolbarContext );\n\tconst childButton = Children.only( props.children );\n\n\t// https://reakit.io/docs/composition/#props-hooks\n\tconst itemHTMLProps = useToolbarItem( accessibleToolbarState, childButton.props );\n\n\treturn <div { ...props }>{ cloneElement( childButton, itemHTMLProps ) }</div>;\n}\n\nexport default AccessibleToolbarButtonContainer;\n"]}