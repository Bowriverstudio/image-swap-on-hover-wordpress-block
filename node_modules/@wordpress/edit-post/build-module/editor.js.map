{"version":3,"sources":["@wordpress/edit-post/src/editor.js"],"names":["memize","size","map","without","withSelect","withDispatch","EditorProvider","ErrorBoundary","PostLockedModal","StrictMode","Component","KeyboardShortcuts","SlotFillProvider","DropZoneProvider","compose","preventEventDiscovery","Layout","EditorInitialization","EditPostSettings","Editor","arguments","getEditorSettings","maxSize","settings","hasFixedToolbar","showInserterHelpPanel","focusMode","hiddenBlockTypes","blockTypes","preferredStyleVariations","__experimentalLocalAutosaveInterval","updatePreferredStyleVariations","__experimentalPreferredStyleVariations","value","onChange","defaultAllowedBlockTypes","allowedBlockTypes","props","post","postId","initialEdits","onError","editorSettings","select","postType","isFeatureActive","getPreference","getEntityRecord","getBlockTypes","dispatch"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport memize from 'memize';\nimport { size, map, without } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport {\n\tEditorProvider,\n\tErrorBoundary,\n\tPostLockedModal,\n} from '@wordpress/editor';\nimport { StrictMode, Component } from '@wordpress/element';\nimport {\n\tKeyboardShortcuts,\n\tSlotFillProvider,\n\tDropZoneProvider,\n} from '@wordpress/components';\nimport { compose } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport preventEventDiscovery from './prevent-event-discovery';\nimport Layout from './components/layout';\nimport EditorInitialization from './components/editor-initialization';\nimport EditPostSettings from './components/edit-post-settings';\n\nclass Editor extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.getEditorSettings = memize( this.getEditorSettings, {\n\t\t\tmaxSize: 1,\n\t\t} );\n\t}\n\n\tgetEditorSettings(\n\t\tsettings,\n\t\thasFixedToolbar,\n\t\tshowInserterHelpPanel,\n\t\tfocusMode,\n\t\thiddenBlockTypes,\n\t\tblockTypes,\n\t\tpreferredStyleVariations,\n\t\t__experimentalLocalAutosaveInterval,\n\t\tupdatePreferredStyleVariations\n\t) {\n\t\tsettings = {\n\t\t\t...settings,\n\t\t\t__experimentalPreferredStyleVariations: {\n\t\t\t\tvalue: preferredStyleVariations,\n\t\t\t\tonChange: updatePreferredStyleVariations,\n\t\t\t},\n\t\t\thasFixedToolbar,\n\t\t\tfocusMode,\n\t\t\tshowInserterHelpPanel,\n\t\t\t__experimentalLocalAutosaveInterval,\n\t\t};\n\n\t\t// Omit hidden block types if exists and non-empty.\n\t\tif ( size( hiddenBlockTypes ) > 0 ) {\n\t\t\t// Defer to passed setting for `allowedBlockTypes` if provided as\n\t\t\t// anything other than `true` (where `true` is equivalent to allow\n\t\t\t// all block types).\n\t\t\tconst defaultAllowedBlockTypes =\n\t\t\t\ttrue === settings.allowedBlockTypes\n\t\t\t\t\t? map( blockTypes, 'name' )\n\t\t\t\t\t: settings.allowedBlockTypes || [];\n\n\t\t\tsettings.allowedBlockTypes = without(\n\t\t\t\tdefaultAllowedBlockTypes,\n\t\t\t\t...hiddenBlockTypes\n\t\t\t);\n\t\t}\n\n\t\treturn settings;\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tsettings,\n\t\t\thasFixedToolbar,\n\t\t\tfocusMode,\n\t\t\tpost,\n\t\t\tpostId,\n\t\t\tinitialEdits,\n\t\t\tonError,\n\t\t\thiddenBlockTypes,\n\t\t\tblockTypes,\n\t\t\tpreferredStyleVariations,\n\t\t\t__experimentalLocalAutosaveInterval,\n\t\t\tshowInserterHelpPanel,\n\t\t\tupdatePreferredStyleVariations,\n\t\t\t...props\n\t\t} = this.props;\n\n\t\tif ( ! post ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst editorSettings = this.getEditorSettings(\n\t\t\tsettings,\n\t\t\thasFixedToolbar,\n\t\t\tshowInserterHelpPanel,\n\t\t\tfocusMode,\n\t\t\thiddenBlockTypes,\n\t\t\tblockTypes,\n\t\t\tpreferredStyleVariations,\n\t\t\t__experimentalLocalAutosaveInterval,\n\t\t\tupdatePreferredStyleVariations\n\t\t);\n\n\t\treturn (\n\t\t\t<StrictMode>\n\t\t\t\t<EditPostSettings.Provider value={ settings }>\n\t\t\t\t\t<SlotFillProvider>\n\t\t\t\t\t\t<DropZoneProvider>\n\t\t\t\t\t\t\t<EditorProvider\n\t\t\t\t\t\t\t\tsettings={ editorSettings }\n\t\t\t\t\t\t\t\tpost={ post }\n\t\t\t\t\t\t\t\tinitialEdits={ initialEdits }\n\t\t\t\t\t\t\t\tuseSubRegistry={ false }\n\t\t\t\t\t\t\t\t{ ...props }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<ErrorBoundary onError={ onError }>\n\t\t\t\t\t\t\t\t\t<EditorInitialization postId={ postId } />\n\t\t\t\t\t\t\t\t\t<Layout />\n\t\t\t\t\t\t\t\t\t<KeyboardShortcuts\n\t\t\t\t\t\t\t\t\t\tshortcuts={ preventEventDiscovery }\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</ErrorBoundary>\n\t\t\t\t\t\t\t\t<PostLockedModal />\n\t\t\t\t\t\t\t</EditorProvider>\n\t\t\t\t\t\t</DropZoneProvider>\n\t\t\t\t\t</SlotFillProvider>\n\t\t\t\t</EditPostSettings.Provider>\n\t\t\t</StrictMode>\n\t\t);\n\t}\n}\n\nexport default compose( [\n\twithSelect( ( select, { postId, postType } ) => {\n\t\tconst { isFeatureActive, getPreference } = select( 'core/edit-post' );\n\t\tconst { getEntityRecord } = select( 'core' );\n\t\tconst { getBlockTypes } = select( 'core/blocks' );\n\n\t\treturn {\n\t\t\tshowInserterHelpPanel: isFeatureActive( 'showInserterHelpPanel' ),\n\t\t\thasFixedToolbar: isFeatureActive( 'fixedToolbar' ),\n\t\t\tfocusMode: isFeatureActive( 'focusMode' ),\n\t\t\tpost: getEntityRecord( 'postType', postType, postId ),\n\t\t\tpreferredStyleVariations: getPreference(\n\t\t\t\t'preferredStyleVariations'\n\t\t\t),\n\t\t\thiddenBlockTypes: getPreference( 'hiddenBlockTypes' ),\n\t\t\tblockTypes: getBlockTypes(),\n\t\t\t__experimentalLocalAutosaveInterval: getPreference(\n\t\t\t\t'localAutosaveInterval'\n\t\t\t),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst { updatePreferredStyleVariations } = dispatch( 'core/edit-post' );\n\t\treturn {\n\t\t\tupdatePreferredStyleVariations,\n\t\t};\n\t} ),\n] )( Editor );\n"]}