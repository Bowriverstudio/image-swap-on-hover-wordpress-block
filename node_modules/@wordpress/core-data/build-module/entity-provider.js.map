{"version":3,"sources":["@wordpress/core-data/src/entity-provider.js"],"names":["createContext","useContext","useCallback","useMemo","useSelect","useDispatch","parse","serialize","defaultEntities","kinds","entities","reduce","acc","entity","kind","name","context","getEntity","type","Error","EntityProvider","id","children","Provider","useEntityId","useEntityProp","prop","value","select","getEntityRecord","getEditedEntityRecord","editEntityRecord","setValue","newValue","__experimentalUseEntitySaving","props","getEntityRecordNonTransientEdits","isSavingEntityRecord","editKeys","Object","keys","some","key","includes","length","isDirty","isSaving","_select","saveEntityRecord","save","filteredEdits","useEntityBlockEditor","initialEdits","blocksProp","contentProp","content","setContent","initialBlocks","undoIgnore","parsedContent","blocks","onInput","onChange","nextBlocks","blocksToSerialize"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport {\n\tcreateContext,\n\tuseContext,\n\tuseCallback,\n\tuseMemo,\n} from '@wordpress/element';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { parse, serialize } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport { defaultEntities, kinds } from './entities';\n\nconst entities = {\n\t...defaultEntities.reduce( ( acc, entity ) => {\n\t\tif ( ! acc[ entity.kind ] ) {\n\t\t\tacc[ entity.kind ] = {};\n\t\t}\n\t\tacc[ entity.kind ][ entity.name ] = { context: createContext() };\n\t\treturn acc;\n\t}, {} ),\n\t...kinds.reduce( ( acc, kind ) => {\n\t\tacc[ kind.name ] = {};\n\t\treturn acc;\n\t}, {} ),\n};\nconst getEntity = ( kind, type ) => {\n\tif ( ! entities[ kind ] ) {\n\t\tthrow new Error( `Missing entity config for kind: ${ kind }.` );\n\t}\n\n\tif ( ! entities[ kind ][ type ] ) {\n\t\tentities[ kind ][ type ] = { context: createContext() };\n\t}\n\n\treturn entities[ kind ][ type ];\n};\n\n/**\n * Context provider component for providing\n * an entity for a specific entity type.\n *\n * @param {Object} props          The component's props.\n * @param {string} props.kind     The entity kind.\n * @param {string} props.type     The entity type.\n * @param {number} props.id       The entity ID.\n * @param {*}      props.children The children to wrap.\n *\n * @return {Object} The provided children, wrapped with\n *                   the entity's context provider.\n */\nexport default function EntityProvider( { kind, type, id, children } ) {\n\tconst Provider = getEntity( kind, type ).context.Provider;\n\treturn <Provider value={ id }>{ children }</Provider>;\n}\n\n/**\n * Hook that returns the ID for the nearest\n * provided entity of the specified type.\n *\n * @param {string} kind The entity kind.\n * @param {string} type The entity type.\n */\nexport function useEntityId( kind, type ) {\n\treturn useContext( getEntity( kind, type ).context );\n}\n\n/**\n * Hook that returns the value and a setter for the\n * specified property of the nearest provided\n * entity of the specified type.\n *\n * @param {string} kind The entity kind.\n * @param {string} type The entity type.\n * @param {string} prop The property name.\n *\n * @return {[*, Function]} A tuple where the first item is the\n *                          property value and the second is the\n *                          setter.\n */\nexport function useEntityProp( kind, type, prop ) {\n\tconst id = useEntityId( kind, type );\n\n\tconst value = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getEntityRecord, getEditedEntityRecord } = select( 'core' );\n\t\t\tgetEntityRecord( kind, type, id ); // Trigger resolver.\n\t\t\tconst entity = getEditedEntityRecord( kind, type, id );\n\t\t\treturn entity && entity[ prop ];\n\t\t},\n\t\t[ kind, type, id, prop ]\n\t);\n\n\tconst { editEntityRecord } = useDispatch( 'core' );\n\tconst setValue = useCallback(\n\t\t( newValue ) => {\n\t\t\teditEntityRecord( kind, type, id, {\n\t\t\t\t[ prop ]: newValue,\n\t\t\t} );\n\t\t},\n\t\t[ kind, type, id, prop ]\n\t);\n\n\treturn [ value, setValue ];\n}\n\n/**\n * Hook that returns whether the nearest provided\n * entity of the specified type is dirty, saving,\n * and a function to save it.\n *\n * The last, optional parameter is for scoping the\n * selection to a single property or a list properties.\n *\n * By default, dirtyness detection and saving considers\n * and handles all properties of an entity, but this\n * last parameter lets you scope it to a single property\n * or a list of properties for each instance of this hook.\n *\n * @param {string}          kind    The entity kind.\n * @param {string}          type    The entity type.\n * @param {string|[string]} [props] The property name or list of property names.\n */\nexport function __experimentalUseEntitySaving( kind, type, props ) {\n\tconst id = useEntityId( kind, type );\n\n\tconst [ isDirty, isSaving, _select ] = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tgetEntityRecordNonTransientEdits,\n\t\t\t\tisSavingEntityRecord,\n\t\t\t} = select( 'core' );\n\t\t\tconst editKeys = Object.keys(\n\t\t\t\tgetEntityRecordNonTransientEdits( kind, type, id )\n\t\t\t);\n\t\t\treturn [\n\t\t\t\tprops\n\t\t\t\t\t? editKeys.some( ( key ) =>\n\t\t\t\t\t\t\ttypeof props === 'string'\n\t\t\t\t\t\t\t\t? key === props\n\t\t\t\t\t\t\t\t: props.includes( key )\n\t\t\t\t\t  )\n\t\t\t\t\t: editKeys.length > 0,\n\t\t\t\tisSavingEntityRecord( kind, type, id ),\n\t\t\t\tselect,\n\t\t\t];\n\t\t},\n\t\t[ kind, type, id, props ]\n\t);\n\n\tconst { saveEntityRecord } = useDispatch( 'core' );\n\tconst save = useCallback( () => {\n\t\t// We use the `select` from `useSelect` here instead of importing it from\n\t\t// the data module so that we get the one bound to the provided registry,\n\t\t// and not the default one.\n\t\tlet filteredEdits = _select( 'core' ).getEntityRecordNonTransientEdits(\n\t\t\tkind,\n\t\t\ttype,\n\t\t\tid\n\t\t);\n\t\tif ( typeof props === 'string' ) {\n\t\t\tfilteredEdits = { [ props ]: filteredEdits[ props ] };\n\t\t} else if ( props ) {\n\t\t\tfilteredEdits = Object.keys( filteredEdits ).reduce(\n\t\t\t\t( acc, key ) => {\n\t\t\t\t\tif ( props.includes( key ) ) {\n\t\t\t\t\t\tacc[ key ] = filteredEdits[ key ];\n\t\t\t\t\t}\n\t\t\t\t\treturn acc;\n\t\t\t\t},\n\t\t\t\t{}\n\t\t\t);\n\t\t}\n\t\tsaveEntityRecord( kind, type, { id, ...filteredEdits } );\n\t}, [ kind, type, id, props, _select ] );\n\n\treturn [ isDirty, isSaving, save ];\n}\n\n/**\n * Hook that returns block content getters and setters for\n * the nearest provided entity of the specified type.\n *\n * The return value has the shape `[ blocks, onInput, onChange ]`.\n * `onInput` is for block changes that don't create undo levels\n * or dirty the post, non-persistent changes, and `onChange` is for\n * peristent changes. They map directly to the props of a\n * `BlockEditorProvider` and are intended to be used with it,\n * or similar components or hooks.\n *\n * @param {string} kind                            The entity kind.\n * @param {string} type                            The entity type.\n * @param {Object} options\n * @param {Object} [options.initialEdits]          Initial edits object for the entity record.\n * @param {string} [options.blocksProp='blocks']   The name of the entity prop that holds the blocks array.\n * @param {string} [options.contentProp='content'] The name of the entity prop that holds the serialized blocks.\n *\n * @return {[WPBlock[], Function, Function]} The block array and setters.\n */\nexport function useEntityBlockEditor(\n\tkind,\n\ttype,\n\t{ initialEdits, blocksProp = 'blocks', contentProp = 'content' } = {}\n) {\n\tconst [ content, setContent ] = useEntityProp( kind, type, contentProp );\n\n\tconst { editEntityRecord } = useDispatch( 'core' );\n\tconst id = useEntityId( kind, type );\n\tconst initialBlocks = useMemo( () => {\n\t\tif ( initialEdits ) {\n\t\t\teditEntityRecord( kind, type, id, initialEdits, {\n\t\t\t\tundoIgnore: true,\n\t\t\t} );\n\t\t}\n\n\t\t// Guard against other instances that might have\n\t\t// set content to a function already.\n\t\tif ( typeof content !== 'function' ) {\n\t\t\tconst parsedContent = parse( content );\n\t\t\treturn parsedContent.length ? parsedContent : [];\n\t\t}\n\t}, [ id ] ); // Reset when the provided entity record changes.\n\tconst [ blocks = initialBlocks, onInput ] = useEntityProp(\n\t\tkind,\n\t\ttype,\n\t\tblocksProp\n\t);\n\n\tconst onChange = useCallback(\n\t\t( nextBlocks ) => {\n\t\t\tonInput( nextBlocks );\n\t\t\t// Use a function edit to avoid serializing often.\n\t\t\tsetContent( ( { blocks: blocksToSerialize } ) =>\n\t\t\t\tserialize( blocksToSerialize )\n\t\t\t);\n\t\t},\n\t\t[ onInput, setContent ]\n\t);\n\treturn [ blocks, onInput, onChange ];\n}\n"]}